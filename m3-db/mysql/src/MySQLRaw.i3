(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

INTERFACE MySQLRaw;


IMPORT Ctypes AS C;


TYPE
  my_ulonglong = C.unsigned_long_long;
  my_bool = C.char;

  OPAQUE = RECORD END;

  RefMysqlT = REF OPAQUE;
  RefMysqlStmtT = REF OPAQUE;
  RefMysqlResultT = REF OPAQUE;
  RefMysqlBindT = REF OPAQUE;
  RefMysqlCharsT = REF OPAQUE;
  RowOffsetT = REF OPAQUE;
  RefMysqlParametersT = REF OPAQUE;
  RefMysqlFieldT = UNTRACED REF MYSQL_FIELD;

  InitRawCBT =
    PROCEDURE (p1: REF C.void_star; p2: C.char_star; p3: C.void_star):
      C.int;
  ReadRawCBT = PROCEDURE
                 (p1: C.void_star; p2: C.char_star; p3: C.unsigned_int):
                 C.int;
  ErrorRawCBT = PROCEDURE
                  (p1: C.void_star; p2: C.char_star; p3: C.unsigned_int):
                  C.int;
  EndRawCBT = PROCEDURE (p1: C.void_star);
  ExtendRawCBT =
    PROCEDURE (p1: C.void_star; p2: C.char_star; p3: REF C.unsigned_long):
      C.char_star;


<* EXTERNAL *>
VAR
  mysql_port: C.unsigned_int;

<* EXTERNAL *>
VAR
  mysql_unix_port: C.char_star;

<* EXTERNAL New_MYSQL_FIELD *>
PROCEDURE New_MYSQL_FIELD (): C.int_star;

<* EXTERNAL Delete_MYSQL_FIELD *>
PROCEDURE Delete_MYSQL_FIELD (VAR self: C.int; );

TYPE

  MYSQL_FIELD = RECORD
                  name            : C.char_star;
                  org_name        : C.char_star;
                  table           : C.char_star;
                  org_table       : C.char_star;
                  db              : C.char_star;
                  catalog         : C.char_star;
                  def             : C.char_star;
                  length          : C.unsigned_long;
                  max_length      : C.unsigned_long;
                  name_length     : C.unsigned_int;
                  org_name_length : C.unsigned_int;
                  table_length    : C.unsigned_int;
                  org_table_length: C.unsigned_int;
                  db_length       : C.unsigned_int;
                  catalog_length  : C.unsigned_int;
                  def_length      : C.unsigned_int;
                  flags           : C.unsigned_int;
                  decimals        : C.unsigned_int;
                  charsetnr       : C.unsigned_int;
                  type            : C.int;
                  extension       : ADDRESS
                END;

<* EXTERNAL *>
VAR
  SQLSTATE_UNKNOWN: C.char_star;

<* EXTERNAL mysql_set_local_infile_handler *>
PROCEDURE SetLocalInfileHandler (mysql             : RefMysqlT;
                                 local_infile_init : InitRawCBT;
                                 local_infile_read : ReadRawCBT;
                                 local_infile_end  : EndRawCBT;
                                 local_infile_error: ErrorRawCBT;
                                 arg6              : ADDRESS;     );

<* EXTERNAL mysql_set_local_infile_default *>
PROCEDURE SetLocalInfileDefault (mysql: RefMysqlT; );

<* EXTERNAL mysql_num_rows *>
PROCEDURE NumRows (res: RefMysqlResultT; ): C.unsigned_long_long;

<* EXTERNAL mysql_num_fields *>
PROCEDURE NumFields (res: RefMysqlResultT; ): C.unsigned_int;

<* EXTERNAL mysql_eof *>
PROCEDURE Eof (res: RefMysqlResultT; ): my_bool;

<* EXTERNAL mysql_fetch_field_direct *>
PROCEDURE FetchFieldDirect
  (res: RefMysqlResultT; fieldnr: C.unsigned_int; ): RefMysqlFieldT;

<* EXTERNAL mysql_fetch_fields *>
PROCEDURE FetchFields (res: RefMysqlResultT; ): RefMysqlFieldT;

<* EXTERNAL mysql_row_tell *>
PROCEDURE RowTell (res: RefMysqlResultT; ): RowOffsetT;

<* EXTERNAL mysql_field_tell *>
PROCEDURE FieldTell (res: RefMysqlResultT; ): C.unsigned_int;

<* EXTERNAL mysql_field_count *>
PROCEDURE FieldCount (mysql: RefMysqlT; ): C.unsigned_int;

<* EXTERNAL mysql_more_results *>
PROCEDURE MoreResults (mysql: RefMysqlT; ): my_bool;

<* EXTERNAL mysql_next_result *>
PROCEDURE NextResult (mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_affected_rows *>
PROCEDURE AffectedRows (mysql: RefMysqlT; ): C.unsigned_long_long;

<* EXTERNAL mysql_autocommit *>
PROCEDURE Autocommit (mysql: RefMysqlT; mode: my_bool; ): my_bool;

<* EXTERNAL mysql_commit *>
PROCEDURE Commit (mysql: RefMysqlT; ): my_bool;

<* EXTERNAL mysql_rollback *>
PROCEDURE Rollback (mysql: RefMysqlT; ): my_bool;

<* EXTERNAL mysql_insert_id *>
PROCEDURE InsertId (mysql: RefMysqlT; ): C.unsigned_long_long;

<* EXTERNAL mysql_errno *>
PROCEDURE Errno (mysql: RefMysqlT; ): C.unsigned_int;

<* EXTERNAL mysql_error *>
PROCEDURE Error (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_info *>
PROCEDURE Info (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_thread_id *>
PROCEDURE ThreadId (mysql: RefMysqlT; ): C.unsigned_long;

<* EXTERNAL mysql_character_set_name *>
PROCEDURE CharacterSetName (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_get_character_set_info *>
PROCEDURE GetCharacterSetInfo (mysql: RefMysqlT; cs: RefMysqlCharsT; );

<* EXTERNAL mysql_set_character_set *>
PROCEDURE SetCharacterSet (mysql: RefMysqlT; csname: C.const_char_star; ):
  C.int;

<* EXTERNAL mysql_init *>
PROCEDURE Init (mysql: RefMysqlT; ): RefMysqlT;

<* EXTERNAL mysql_ssl_set *>
PROCEDURE SslSet
  (mysql: RefMysqlT; key, cert, ca, capath, cipher: C.const_char_star; ):
  C.int;

<* EXTERNAL mysql_get_ssl_cipher *>
PROCEDURE GetSslCipher (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_change_user *>
PROCEDURE ChangeUser
  (mysql: RefMysqlT; user, passwd, db: C.const_char_star; ): my_bool;

<* EXTERNAL mysql_real_connect *>
PROCEDURE RealConnect (mysql                 : RefMysqlT;
                       host, user, passwd, db: C.const_char_star;
                       port                  : C.unsigned_int;
                       unix_socket           : C.const_char_star;
                       clientflag            : C.unsigned_long;   ):
  RefMysqlT;

<* EXTERNAL mysql_close *>
PROCEDURE Close (sock: RefMysqlT; );

<* EXTERNAL mysql_select_db *>
PROCEDURE SelectDb (mysql: RefMysqlT; db: C.const_char_star; ): C.int;

<* EXTERNAL mysql_query *>
PROCEDURE Query (mysql: RefMysqlT; q: C.const_char_star; ): C.int;

<* EXTERNAL mysql_send_query *>
PROCEDURE SendQuery
  (mysql: RefMysqlT; q: C.const_char_star; length: C.unsigned_long; ):
  C.int;

<* EXTERNAL mysql_read_query_result *>
PROCEDURE ReadQueryResult (mysql: RefMysqlT; ): my_bool;

<* EXTERNAL mysql_real_query *>
PROCEDURE RealQuery
  (mysql: RefMysqlT; q: C.const_char_star; length: C.unsigned_long; ):
  C.int;

<* EXTERNAL mysql_shutdown *>
PROCEDURE Shutdown
  (mysql         : RefMysqlT;
   shutdown_level: C.int (* enum mysql_enum_shutdown_level *); ): C.int;

<* EXTERNAL mysql_dump_debug_info *>
PROCEDURE DumpDebugInfo (mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_refresh *>
PROCEDURE Refresh (mysql: RefMysqlT; refresh_options: C.unsigned_int; ):
  C.int;

<* EXTERNAL mysql_kill *>
PROCEDURE Kill (mysql: RefMysqlT; pid: C.unsigned_long; ): C.int;

<* EXTERNAL mysql_ping *>
PROCEDURE Ping (mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_stat *>
PROCEDURE Stat (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_get_server_info *>
PROCEDURE GetServerInfo (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_get_server_version *>
PROCEDURE GetServerVersion (mysql: RefMysqlT; ): C.unsigned_long;

<* EXTERNAL mysql_get_host_info *>
PROCEDURE GetHostInfo (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_get_proto_info *>
PROCEDURE GetProtoInfo (mysql: RefMysqlT; ): C.unsigned_int;

<* EXTERNAL mysql_list_dbs *>
PROCEDURE ListDbs (mysql: RefMysqlT; wild: C.const_char_star; ):
  RefMysqlResultT;

<* EXTERNAL mysql_list_tables *>
PROCEDURE ListTables (mysql: RefMysqlT; wild: C.const_char_star; ):
  RefMysqlResultT;

<* EXTERNAL mysql_list_fields *>
PROCEDURE ListFields (mysql: RefMysqlT; table, wild: C.const_char_star; ):
  RefMysqlResultT;

<* EXTERNAL mysql_list_processes *>
PROCEDURE ListProcesses (mysql: RefMysqlT; ): RefMysqlResultT;

<* EXTERNAL mysql_store_result *>
PROCEDURE StoreResult (mysql: RefMysqlT; ): RefMysqlResultT;

<* EXTERNAL mysql_use_result *>
PROCEDURE UseResult (mysql: RefMysqlT; ): RefMysqlResultT;

<* EXTERNAL mysql_options *>
PROCEDURE Options (mysql : RefMysqlT;
                   option: C.int (* enum mysql_option *);
                   arg   : ADDRESS;                       ): C.int;

<* EXTERNAL mysql_options4 *>
PROCEDURE Options4 (mysql     : RefMysqlT;
                    option    : C.int (* enum mysql_option *);
                    arg1, arg2: ADDRESS;                       ): C.int;

<* EXTERNAL mysql_free_result *>
PROCEDURE FreeResult (mysql_res: RefMysqlResultT; );

<* EXTERNAL mysql_data_seek *>
PROCEDURE DataSeek
  (mysql_res: RefMysqlResultT; offset: C.unsigned_long_long; );

<* EXTERNAL mysql_row_seek *>
PROCEDURE RowSeek (mysql_res: RefMysqlResultT; VAR arg2: RowOffsetT; ):
  RowOffsetT;

<* EXTERNAL mysql_field_seek *>
PROCEDURE FieldSeek (mysql_res: RefMysqlResultT; offset: C.unsigned_int; ):
  C.unsigned_int;

<* EXTERNAL mysql_fetch_row *>
PROCEDURE FetchRow (mysql_res: RefMysqlResultT; ): C.char_star_star;

<* EXTERNAL mysql_fetch_lengths *>
PROCEDURE FetchLengths (mysql_res: RefMysqlResultT; ):
  C.unsigned_long_star;

<* EXTERNAL mysql_fetch_field *>
PROCEDURE FetchField (mysql_res: RefMysqlResultT; ): RefMysqlFieldT;

<* EXTERNAL mysql_escape_string *>
PROCEDURE EscapeString (to         : C.char_star;
                        from       : C.const_char_star;
                        from_length: C.unsigned_long;   ): C.unsigned_long;

<* EXTERNAL mysql_real_escape_string *>
PROCEDURE RealEscapeString (mysql : RefMysqlT;
                            to    : C.char_star;
                            from  : C.const_char_star;
                            length: C.unsigned_long;   ): C.unsigned_long;

<* EXTERNAL mysql_thread_safe *>
PROCEDURE ThreadSafe (): C.unsigned_int;

<* EXTERNAL mysql_warning_count *>
PROCEDURE WarningCount (mysql: RefMysqlT; ): C.unsigned_int;

<* EXTERNAL mysql_sqlstate *>
PROCEDURE Sqlstate (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_server_init *>
PROCEDURE ServerInit
  (argc: C.int; READONLY argv, groups: (*ARRAY OF*) C.char_star; ): C.int;

<* EXTERNAL mysql_server_end *>
PROCEDURE ServerEnd ();

<* EXTERNAL mysql_thread_end *>
PROCEDURE ThreadEnd ();

<* EXTERNAL mysql_thread_init *>
PROCEDURE ThreadInit (): my_bool;

<* EXTERNAL mysql_set_server_option *>
PROCEDURE SetServerOption
  (mysql: RefMysqlT; option: C.int (* enum enum_mysql_set_option *); ):
  C.int;

<* EXTERNAL mysql_get_client_info *>
PROCEDURE GetClientInfo (): C.char_star;

<* EXTERNAL mysql_get_client_version *>
PROCEDURE GetClientVersion (): C.unsigned_long;

(*  
<* EXTERNAL mysql_get_server_name *>
PROCEDURE GetServerName (mysql: RefMysqlT; ): C.char_star;

<* EXTERNAL mysql_get_option *>
PROCEDURE GetOption (mysql : RefMysqlT;
                     option: C.int (* enum mysql_option *);
                     arg   : ADDRESS;                       ): C.int;
*)
  
<* EXTERNAL mysql_hex_string *>
PROCEDURE HexString
  (to: C.char_star; from: C.const_char_star; len: C.unsigned_long; ):
  C.unsigned_long;

<* EXTERNAL mysql_get_socket *>
PROCEDURE GetSocket (mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_get_timeout_value *>
PROCEDURE GetTimeoutValue (mysql: RefMysqlT; ): C.unsigned_int;

<* EXTERNAL mysql_get_timeout_value_ms *>
PROCEDURE GetTimeoutValueMs (mysql: RefMysqlT; ): C.unsigned_int;

<* EXTERNAL mysql_debug *>
PROCEDURE Debug (debug: C.const_char_star; );

<* EXTERNAL mysql_net_read_packet *>
PROCEDURE NetReadPacket (mysql: RefMysqlT; ): C.unsigned_long;

<* EXTERNAL mysql_net_field_length *>
PROCEDURE NetFieldLength (READONLY packet: (*ARRAY OF*) C.char_star; ):
  C.unsigned_long;

<* EXTERNAL mysql_embedded *>
PROCEDURE Embedded (): my_bool;

<* EXTERNAL mysql_get_parameters *>
PROCEDURE GetParameters (): RefMysqlParametersT;

<* EXTERNAL mysql_close_start *>
PROCEDURE CloseStart (sock: RefMysqlT; ): C.int;

<* EXTERNAL mysql_close_cont *>
PROCEDURE CloseCont (sock: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_commit_start *>
PROCEDURE CommitStart (ret: C.char_star; mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_commit_cont *>
PROCEDURE CommitCont (ret: C.char_star; mysql: RefMysqlT; status: C.int; ):
  C.int;

<* EXTERNAL mysql_dump_debug_info_cont *>
PROCEDURE DumpDebugInfoCont
  (VAR ret: C.int; mysql: RefMysqlT; ready_status: C.int; ): C.int;

<* EXTERNAL mysql_dump_debug_info_start *>
PROCEDURE DumpDebugInfoStart (VAR ret: C.int; mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_rollback_start *>
PROCEDURE RollbackStart (ret: C.char_star; mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_rollback_cont *>
PROCEDURE RollbackCont
  (ret: C.char_star; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_autocommit_start *>
PROCEDURE AutocommitStart
  (ret: C.char_star; mysql: RefMysqlT; auto_mode: my_bool; ): C.int;

<* EXTERNAL mysql_list_fields_cont *>
PROCEDURE ListFieldsCont
  (VAR ret: RefMysqlResultT; mysql: RefMysqlT; ready_status: C.int; ):
  C.int;

<* EXTERNAL mysql_list_fields_start *>
PROCEDURE ListFieldsStart (VAR ret        : RefMysqlResultT;
                               mysql      : RefMysqlT;
                               table, wild: C.const_char_star; ): C.int;

<* EXTERNAL mysql_autocommit_cont *>
PROCEDURE AutocommitCont
  (ret: C.char_star; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_next_result_start *>
PROCEDURE NextResultStart (VAR ret: C.int; mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_next_result_cont *>
PROCEDURE NextResultCont
  (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_select_db_start *>
PROCEDURE SelectDbStart
  (VAR ret: C.int; mysql: RefMysqlT; db: C.const_char_star; ): C.int;

<* EXTERNAL mysql_select_db_cont *>
PROCEDURE SelectDbCont
  (VAR ret: C.int; mysql: RefMysqlT; ready_status: C.int; ): C.int;
  
(*
<* EXTERNAL mysql_stmt_warning_count *>
PROCEDURE StmtWarningCount (stmt: RefMysqlStmtT; ): C.int;
*)

<* EXTERNAL mysql_stmt_next_result_start *>
PROCEDURE StmtNextResultStart (VAR ret: C.int; stmt: RefMysqlStmtT; ):
  C.int;

<* EXTERNAL mysql_stmt_next_result_cont *>
PROCEDURE StmtNextResultCont
  (VAR ret: C.int; stmt: RefMysqlStmtT; status: C.int; ): C.int;

<* EXTERNAL mysql_set_character_set_start *>
PROCEDURE SetCharacterSetStart
  (VAR ret: C.int; mysql: RefMysqlT; csname: C.const_char_star; ): C.int;

<* EXTERNAL mysql_set_character_set_cont *>
PROCEDURE SetCharacterSetCont
  (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_change_user_start *>
PROCEDURE ChangeUserStart (ret             : C.char_star;
                           mysql           : RefMysqlT;
                           user, passwd, db: C.const_char_star; ): C.int;

<* EXTERNAL mysql_change_user_cont *>
PROCEDURE ChangeUserCont
  (ret: C.char_star; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_real_connect_start *>
PROCEDURE RealConnectStart
  (VAR ret                   : RefMysqlT;
       mysql                 : RefMysqlT;
       host, user, passwd, db: C.const_char_star;
       port                  : C.unsigned_int;
       unix_socket           : C.const_char_star;
       clientflag            : C.unsigned_long;   ): C.int;

<* EXTERNAL mysql_real_connect_cont *>
PROCEDURE RealConnectCont
  (VAR ret: RefMysqlT; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_query_start *>
PROCEDURE QueryStart
  (VAR ret: C.int; mysql: RefMysqlT; q: C.const_char_star; ): C.int;

<* EXTERNAL mysql_query_cont *>
PROCEDURE QueryCont (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ):
  C.int;

<* EXTERNAL mysql_send_query_start *>
PROCEDURE SendQueryStart (VAR ret   : C.int;
                              mysql : RefMysqlT;
                              q     : C.const_char_star;
                              length: C.unsigned_long;   ): C.int;

<* EXTERNAL mysql_send_query_cont *>
PROCEDURE SendQueryCont
  (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_real_query_start *>
PROCEDURE RealQueryStart (VAR ret   : C.int;
                              mysql : RefMysqlT;
                              q     : C.const_char_star;
                              length: C.unsigned_long;   ): C.int;

<* EXTERNAL mysql_real_query_cont *>
PROCEDURE RealQueryCont
  (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_store_result_start *>
PROCEDURE StoreResultStart (VAR ret: RefMysqlResultT; mysql: RefMysqlT; ):
  C.int;

<* EXTERNAL mysql_store_result_cont *>
PROCEDURE StoreResultCont
  (VAR ret: RefMysqlResultT; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_shutdown_start *>
PROCEDURE ShutdownStart
  (VAR ret           : C.int;
       mysql         : RefMysqlT;
       shutdown_level: C.int (* enum mysql_enum_shutdown_level *); ):
  C.int;

<* EXTERNAL mysql_shutdown_cont *>
PROCEDURE ShutdownCont (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ):
  C.int;

<* EXTERNAL mysql_refresh_start *>
PROCEDURE RefreshStart
  (VAR ret: C.int; mysql: RefMysqlT; refresh_options: C.unsigned_int; ):
  C.int;

<* EXTERNAL mysql_refresh_cont *>
PROCEDURE RefreshCont (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ):
  C.int;

<* EXTERNAL mysql_kill_start *>
PROCEDURE KillStart
  (VAR ret: C.int; mysql: RefMysqlT; pid: C.unsigned_long; ): C.int;

<* EXTERNAL mysql_kill_cont *>
PROCEDURE KillCont (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ):
  C.int;

<* EXTERNAL mysql_set_server_option_start *>
PROCEDURE SetServerOptionStart
  (VAR ret   : C.int;
       mysql : RefMysqlT;
       option: C.int (* enum enum_mysql_set_option *); ): C.int;

<* EXTERNAL mysql_set_server_option_cont *>
PROCEDURE SetServerOptionCont
  (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_ping_start *>
PROCEDURE PingStart (VAR ret: C.int; mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_ping_cont *>
PROCEDURE PingCont (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ):
  C.int;

<* EXTERNAL mysql_stat_start *>
PROCEDURE StatStart
  (READONLY ret: (*ARRAY OF*) C.char_star; mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_stat_cont *>
PROCEDURE StatCont (READONLY ret   : (*ARRAY OF*) C.char_star;
                             mysql : RefMysqlT;
                             status: C.int;                    ): C.int;

<* EXTERNAL mysql_free_result_start *>
PROCEDURE FreeResultStart (mysql_res: RefMysqlResultT; ): C.int;

<* EXTERNAL mysql_free_result_cont *>
PROCEDURE FreeResultCont (mysql_res: RefMysqlResultT; status: C.int; ):
  C.int;

<* EXTERNAL mysql_fetch_row_start *>
PROCEDURE FetchRowStart
  (ret: C.char_star_star; mysql_res: RefMysqlResultT; ): C.int;

<* EXTERNAL mysql_fetch_row_cont *>
PROCEDURE FetchRowCont
  (ret: C.char_star_star; mysql_res: RefMysqlResultT; status: C.int; ):
  C.int;

<* EXTERNAL mysql_read_query_result_start *>
PROCEDURE ReadQueryResultStart (ret: C.char_star; mysql: RefMysqlT; ):
  C.int;

<* EXTERNAL mysql_read_query_result_cont *>
PROCEDURE ReadQueryResultCont
  (ret: C.char_star; mysql: RefMysqlT; status: C.int; ): C.int;

(*  
<* EXTERNAL mysql_reset_connection_start *>
PROCEDURE ResetConnectionStart (VAR ret: C.int; mysql: RefMysqlT; ): C.int;

<* EXTERNAL mysql_reset_connection_cont *>
PROCEDURE ResetConnectionCont
  (VAR ret: C.int; mysql: RefMysqlT; status: C.int; ): C.int;

<* EXTERNAL mysql_session_track_get_next *>
PROCEDURE SessionTrackGetNext
  (         mysql : RefMysqlT;
            type  : C.int (* enum enum_session_state_type *);
   READONLY data  : (*ARRAY OF*) C.char_star;
   VAR      length: INTEGER;                                  ): C.int;

<* EXTERNAL mysql_session_track_get_first *>
PROCEDURE SessionTrackGetFirst
  (         mysql : RefMysqlT;
            type  : C.int (* enum enum_session_state_type *);
   READONLY data  : (*ARRAY OF*) C.char_star;
   VAR      length: INTEGER;                                  ): C.int;
*)

<* EXTERNAL mysql_stmt_prepare_start *>
PROCEDURE StmtPrepareStart (VAR ret   : C.int;
                                stmt  : RefMysqlStmtT;
                                query : C.const_char_star;
                                length: C.unsigned_long;   ): C.int;

<* EXTERNAL mysql_stmt_prepare_cont *>
PROCEDURE StmtPrepareCont
  (VAR ret: C.int; stmt: RefMysqlStmtT; status: C.int; ): C.int;

<* EXTERNAL mysql_stmt_execute_start *>
PROCEDURE StmtExecuteStart (VAR ret: C.int; stmt: RefMysqlStmtT; ): C.int;

<* EXTERNAL mysql_stmt_execute_cont *>
PROCEDURE StmtExecuteCont
  (VAR ret: C.int; stmt: RefMysqlStmtT; status: C.int; ): C.int;

<* EXTERNAL mysql_stmt_fetch_start *>
PROCEDURE StmtFetchStart (VAR ret: C.int; stmt: RefMysqlStmtT; ): C.int;

<* EXTERNAL mysql_stmt_fetch_cont *>
PROCEDURE StmtFetchCont
  (VAR ret: C.int; stmt: RefMysqlStmtT; status: C.int; ): C.int;

<* EXTERNAL mysql_stmt_store_result_start *>
PROCEDURE StmtStoreResultStart (VAR ret: C.int; stmt: RefMysqlStmtT; ):
  C.int;

<* EXTERNAL mysql_stmt_store_result_cont *>
PROCEDURE StmtStoreResultCont
  (VAR ret: C.int; stmt: RefMysqlStmtT; status: C.int; ): C.int;

<* EXTERNAL mysql_stmt_close_start *>
PROCEDURE StmtCloseStart (ret: C.char_star; stmt: RefMysqlStmtT; ): C.int;

<* EXTERNAL mysql_stmt_close_cont *>
PROCEDURE StmtCloseCont
  (ret: C.char_star; stmt: RefMysqlStmtT; status: C.int; ): C.int;

<* EXTERNAL mysql_stmt_reset_start *>
PROCEDURE StmtResetStart (ret: C.char_star; stmt: RefMysqlStmtT; ): C.int;

<* EXTERNAL mysql_stmt_reset_cont *>
PROCEDURE StmtResetCont
  (ret: C.char_star; stmt: RefMysqlStmtT; status: C.int; ): C.int;

<* EXTERNAL mysql_stmt_free_result_start *>
PROCEDURE StmtFreeResultStart (ret: C.char_star; stmt: RefMysqlStmtT; ):
  C.int;

<* EXTERNAL mysql_stmt_free_result_cont *>
PROCEDURE StmtFreeResultCont
  (ret: C.char_star; stmt: RefMysqlStmtT; status: C.int; ): C.int;

<* EXTERNAL mysql_stmt_send_long_data_start *>
PROCEDURE StmtSendLongDataStart (ret         : C.char_star;
                                 stmt        : RefMysqlStmtT;
                                 param_number: C.unsigned_int;
                                 data        : C.const_char_star;
                                 len         : C.unsigned_long;   ): C.int;

<* EXTERNAL mysql_stmt_send_long_data_cont *>
PROCEDURE StmtSendLongDataCont
  (ret: C.char_star; stmt: RefMysqlStmtT; status: C.int; ): C.int;

(*  
<* EXTERNAL mysql_reset_connection *>
PROCEDURE ResetConnection (mysql: RefMysqlT; ): C.int;
*)

END MySQLRaw.
