(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

INTERFACE MySQL;



TYPE
  T <: ADDRESS;
  ResultT <: ADDRESS;
  StmtT <: ADDRESS;
  RowOffsetT <: ADDRESS;
  ManagerT <: ADDRESS;
  ParametersT <: ADDRESS;
  BindT <: ADDRESS;
  CharsT <: ADDRESS;
  FieldT = REF MYSQL_FIELD;
  RefFieldArray = REF ARRAY OF FieldT;

TYPE Int32 = [-16_7FFFFFFF - 1 .. 16_7FFFFFFF];

CONST
  MAX_COLUMNS = 1000;            (* Arbitrary limit to how many cols
                                    returned in a query *)

TYPE RefLengthsT = UNTRACED REF ARRAY [0 .. MAX_COLUMNS] OF INTEGER;

TYPE
  InitCBT = PROCEDURE (p1: REF ADDRESS; p2: TEXT; p3: ADDRESS): INTEGER;
  ReadCBT = PROCEDURE (p1: ADDRESS; p2: TEXT; p3: CARDINAL): INTEGER;
  ErrorCBT = PROCEDURE (p1: ADDRESS; p2: TEXT; p3: CARDINAL): INTEGER;
  EndCBT = PROCEDURE (p1: ADDRESS);

TYPE

  MYSQL_FIELD = RECORD
                  name            : TEXT;
                  org_name        : TEXT;
                  table           : TEXT;
                  org_table       : TEXT;
                  db              : TEXT;
                  catalog         : TEXT;
                  def             : TEXT;
                  length          : INTEGER;
                  max_length      : INTEGER;
                  name_length     : CARDINAL;
                  org_name_length : CARDINAL;
                  table_length    : CARDINAL;
                  org_table_length: CARDINAL;
                  db_length       : CARDINAL;
                  catalog_length  : CARDINAL;
                  def_length      : CARDINAL;
                  flags           : CARDINAL;
                  decimals        : CARDINAL;
                  charsetnr       : CARDINAL;
                  type            : INTEGER;
                  extension       : ADDRESS
                END;

CONST                            (* Enum Option *)
  MYSQL_OPT_CONNECT_TIMEOUT              = 0;
  MYSQL_OPT_COMPRESS                     = 1;
  MYSQL_OPT_NAMED_PIPE                   = 2;
  MYSQL_INIT_COMMAND                     = 3;
  MYSQL_READ_DEFAULT_FILE                = 4;
  MYSQL_READ_DEFAULT_GROUP               = 5;
  MYSQL_SET_CHARSET_DIR                  = 6;
  MYSQL_SET_CHARSET_NAME                 = 7;
  MYSQL_OPT_LOCAL_INFILE                 = 8;
  MYSQL_OPT_PROTOCOL                     = 9;
  MYSQL_SHARED_MEMORY_BASE_NAME          = 10;
  MYSQL_OPT_READ_TIMEOUT                 = 11;
  MYSQL_OPT_WRITE_TIMEOUT                = 12;
  MYSQL_OPT_USE_RESULT                   = 13;
  MYSQL_OPT_USE_REMOTE_CONNECTION        = 14;
  MYSQL_OPT_USE_EMBEDDED_CONNECTION      = 15;
  MYSQL_OPT_GUESS_CONNECTION             = 16;
  MYSQL_SET_CLIENT_IP                    = 17;
  MYSQL_SECURE_AUTH                      = 18;
  MYSQL_REPORT_DATA_TRUNCATION           = 19;
  MYSQL_OPT_RECONNECT                    = 20;
  MYSQL_OPT_SSL_VERIFY_SERVER_CERT       = 21;
  MYSQL_PLUGIN_DIR                       = 22;
  MYSQL_DEFAULT_AUTH                     = 23;
  MYSQL_OPT_BIND                         = 24;
  MYSQL_OPT_SSL_KEY                      = 25;
  MYSQL_OPT_SSL_CERT                     = 26;
  MYSQL_OPT_SSL_CA                       = 27;
  MYSQL_OPT_SSL_CAPATH                   = 28;
  MYSQL_OPT_SSL_CIPHER                   = 29;
  MYSQL_OPT_SSL_CRL                      = 30;
  MYSQL_OPT_SSL_CRLPATH                  = 31;
  MYSQL_OPT_CONNECT_ATTR_RESET           = 32;
  MYSQL_OPT_CONNECT_ATTR_ADD             = 33;
  MYSQL_OPT_CONNECT_ATTR_DELETE          = 34;
  MYSQL_SERVER_PUBLIC_KEY                = 35;
  MYSQL_ENABLE_CLEARTEXT_PLUGIN          = 36;
  MYSQL_OPT_CAN_HANDLE_EXPIRED_PASSWORDS = 37;
  MYSQL_OPT_SSL_ENFORCE                  = 38;
  MYSQL_OPT_MAX_ALLOWED_PACKET           = 39;
  MYSQL_OPT_NET_BUFFER_LENGTH            = 40;
  MYSQL_OPT_TLS_VERSION                  = 41;
  MYSQL_PROGRESS_CALLBACK                = 5999;
  MYSQL_OPT_NONBLOCK                     = 6000;
  MYSQL_DATABASE_DRIVER                  = 7000;
  MARIADB_OPT_SSL_FP                     = 7001;
  MARIADB_OPT_SSL_FP_LIST                = 7002;
  MARIADB_OPT_TLS_PASSPHRASE             = 7003;
  MARIADB_OPT_TLS_CIPHER_STRENGTH        = 7004;
  MARIADB_OPT_TLS_VERSION                = 7005;
  MARIADB_OPT_TLS_PEER_FP                = 7006;
  MARIADB_OPT_TLS_PEER_FP_LIST           = 7007;
  MARIADB_OPT_CONNECTION_READ_ONLY       = 7008;
  MYSQL_OPT_CONNECT_ATTRS                = 7009;
  MARIADB_OPT_USERDATA                   = 7010;
  MARIADB_OPT_CONNECTION_HANDLER         = 7011;
  MARIADB_OPT_PORT                       = 7012;
  MARIADB_OPT_UNIXSOCKET                 = 7013;
  MARIADB_OPT_PASSWORD                   = 7014;
  MARIADB_OPT_HOST                       = 7015;
  MARIADB_OPT_USER                       = 7016;
  MARIADB_OPT_SCHEMA                     = 7017;
  MARIADB_OPT_DEBUG                      = 7018;
  MARIADB_OPT_FOUND_ROWS                 = 7019;
  MARIADB_OPT_MULTI_RESULTS              = 7020;
  MARIADB_OPT_MULTI_STATEMENTS           = 7021;
  MARIADB_OPT_INTERACTIVE                = 7022;
  MARIADB_OPT_PROXY_HEADER               = 7023;
  MARIADB_OPT_IO_WAIT                    = 7024;

TYPE                             (* Enum Option *)
  Option = [0 .. 7024];


TYPE
  mariadb_value =
    {MARIADB_CHARSET_ID, MARIADB_CHARSET_NAME, MARIADB_CLIENT_ERRORS,
     MARIADB_CLIENT_VERSION, MARIADB_CLIENT_VERSION_ID,
     MARIADB_CONNECTION_ASYNC_TIMEOUT, MARIADB_CONNECTION_ASYNC_TIMEOUT_MS,
     MARIADB_CONNECTION_MARIADB_CHARSET_INFO, MARIADB_CONNECTION_ERROR,
     MARIADB_CONNECTION_ERROR_ID, MARIADB_CONNECTION_HOST,
     MARIADB_CONNECTION_INFO, MARIADB_CONNECTION_PORT,
     MARIADB_CONNECTION_PROTOCOL_VERSION_ID, MARIADB_CONNECTION_PVIO_TYPE,
     MARIADB_CONNECTION_SCHEMA, MARIADB_CONNECTION_SERVER_TYPE,
     MARIADB_CONNECTION_SERVER_VERSION,
     MARIADB_CONNECTION_SERVER_VERSION_ID, MARIADB_CONNECTION_SOCKET,
     MARIADB_CONNECTION_SQLSTATE, MARIADB_CONNECTION_SSL_CIPHER,
     MARIADB_TLS_LIBRARY, MARIADB_CONNECTION_TLS_VERSION,
     MARIADB_CONNECTION_TLS_VERSION_ID, MARIADB_CONNECTION_TYPE,
     MARIADB_CONNECTION_UNIX_SOCKET, MARIADB_CONNECTION_USER,
     MARIADB_MAX_ALLOWED_PACKET, MARIADB_NET_BUFFER_LENGTH,
     MARIADB_CONNECTION_SERVER_STATUS,
     MARIADB_CONNECTION_SERVER_CAPABILITIES,
     MARIADB_CONNECTION_EXTENDED_SERVER_CAPABILITIES,
     MARIADB_CONNECTION_CLIENT_CAPABILITIES};


TYPE
  Status =
    {MYSQL_STATUS_READY, MYSQL_STATUS_GET_RESULT, MYSQL_STATUS_USE_RESULT,
     MYSQL_STATUS_QUERY_SENT, MYSQL_STATUS_SENDING_LOAD_DATA,
     MYSQL_STATUS_FETCHING_DATA, MYSQL_STATUS_NEXT_RESULT_PENDING,
     MYSQL_STATUS_QUIT_SENT, MYSQL_STATUS_STMT_RESULT};


TYPE
  ProtocolType =
    {MYSQL_PROTOCOL_DEFAULT, MYSQL_PROTOCOL_TCP, MYSQL_PROTOCOL_SOCKET,
     MYSQL_PROTOCOL_PIPE, MYSQL_PROTOCOL_MEMORY};


TYPE
  mariadb_field_attr_t =
    {MARIADB_FIELD_ATTR_DATA_TYPE_NAME, MARIADB_FIELD_ATTR_FORMAT_NAME};


CONST                            (* Enum enum_mysql_timestamp_type *)
  MYSQL_TIMESTAMP_NONE     = -2;
  MYSQL_TIMESTAMP_ERROR    = -1;
  MYSQL_TIMESTAMP_DATE     = 0;
  MYSQL_TIMESTAMP_DATETIME = 1;
  MYSQL_TIMESTAMP_TIME     = 2;

TYPE                             (* Enum enum_mysql_timestamp_type *)
  enum_mysql_timestamp_type = [-2 .. 2];


CONST
  AUTO_SEC_PART_DIGITS   = 39;
  SEC_PART_DIGITS        = 6;
  MARIADB_INVALID_SOCKET = -1;
  MYSQL_WAIT_READ        = 1;
  MYSQL_WAIT_WRITE       = 2;
  MYSQL_WAIT_EXCEPT      = 4;
  MYSQL_WAIT_TIMEOUT     = 8;
  LOCAL_INFILE_ERROR_LEN = 512;
PROCEDURE SetLocalInfileHandler (mysql             : T;
                                 local_infile_init : InitCBT;
                                 local_infile_read : ReadCBT;
                                 local_infile_end  : EndCBT;
                                 local_infile_error: ErrorCBT;
                                 arg6              : ADDRESS;  );

PROCEDURE SetLocalInfileDefault (mysql: T; );

PROCEDURE NumRows (res: ResultT; ): LONGINT;

PROCEDURE NumFields (res: ResultT; ): Int32;

PROCEDURE Eof (res: ResultT; ): BOOLEAN;

PROCEDURE FetchFieldDirect (res: ResultT; fieldnr: Int32; ): FieldT;

PROCEDURE FetchFields (res: ResultT; ): RefFieldArray;

PROCEDURE RowTell (res: ResultT; ): RowOffsetT;

PROCEDURE FieldTell (res: ResultT; ): Int32;

PROCEDURE FieldCount (mysql: T; ): Int32;

PROCEDURE MoreResults (mysql: T; ): BOOLEAN;

PROCEDURE NextResult (mysql: T; ): Int32;

PROCEDURE AffectedRows (mysql: T; ): LONGINT;

PROCEDURE Autocommit (mysql: T; mode: BOOLEAN; ): BOOLEAN;

PROCEDURE Commit (mysql: T; ): BOOLEAN;

PROCEDURE Rollback (mysql: T; ): BOOLEAN;

PROCEDURE InsertId (mysql: T; ): LONGINT;

PROCEDURE Errno (mysql: T; ): Int32;

PROCEDURE Error (mysql: T; ): TEXT;

PROCEDURE Info (mysql: T; ): TEXT;

PROCEDURE ThreadId (mysql: T; ): CARDINAL;

PROCEDURE CharacterSetName (mysql: T; ): TEXT;

PROCEDURE GetCharacterSetInfo (mysql: T; VAR cs: CharsT; );

PROCEDURE SetCharacterSet (mysql: T; csname: TEXT; ): Int32;

PROCEDURE Init (mysql: T; ): T;

PROCEDURE SslSet (mysql: T; key, cert, ca, capath, cipher: TEXT; ): Int32;

PROCEDURE GetSslCipher (mysql: T; ): TEXT;

PROCEDURE ChangeUser (mysql: T; user, passwd, db: TEXT; ): BOOLEAN;

PROCEDURE RealConnect (mysql                 : T;
                       host, user, passwd, db: TEXT;
                       port                  : Int32;
                       unix_socket           : TEXT;
                       clientflag            : CARDINAL; ): T;

PROCEDURE Close (sock: T; );

PROCEDURE SelectDb (mysql: T; db: TEXT; ): Int32;

PROCEDURE Query (mysql: T; q: TEXT; ): Int32;

PROCEDURE SendQuery (mysql: T; q: TEXT; length: CARDINAL; ): Int32;

PROCEDURE ReadQueryResult (mysql: T; ): BOOLEAN;

PROCEDURE RealQuery (mysql: T; q: TEXT; length: CARDINAL; ): Int32;

PROCEDURE Shutdown (mysql: T; shutdown_level: INTEGER; ): Int32;

PROCEDURE DumpDebugInfo (mysql: T; ): Int32;

PROCEDURE Refresh (mysql: T; refresh_options: Int32; ): Int32;

PROCEDURE Kill (mysql: T; pid: CARDINAL; ): Int32;

PROCEDURE Ping (mysql: T; ): Int32;

PROCEDURE Stat (mysql: T; ): TEXT;

PROCEDURE GetServerInfo (mysql: T; ): TEXT;

PROCEDURE GetServerVersion (mysql: T; ): CARDINAL;

PROCEDURE GetHostInfo (mysql: T; ): TEXT;

PROCEDURE GetProtoInfo (mysql: T; ): Int32;

PROCEDURE ListDbs (mysql: T; wild: TEXT; ): ResultT;

PROCEDURE ListTables (mysql: T; wild: TEXT; ): ResultT;

PROCEDURE ListFields (mysql: T; table, wild: TEXT; ): ResultT;

PROCEDURE ListProcesses (mysql: T; ): ResultT;

PROCEDURE StoreResult (mysql: T; ): ResultT;

PROCEDURE UseResult (mysql: T; ): ResultT;

PROCEDURE Options (mysql: T; option: INTEGER; arg: ADDRESS; ): Int32;

PROCEDURE Options4 (mysql: T; option: INTEGER; arg1, arg2: ADDRESS; ):
  Int32;

PROCEDURE FreeResult (mysql_res: ResultT; );

PROCEDURE DataSeek (mysql_res: ResultT; offset: LONGINT; );

PROCEDURE RowSeek (mysql_res: ResultT; VAR arg2_in: RowOffsetT; ):
  RowOffsetT;

PROCEDURE FieldSeek (mysql_res: ResultT; offset: CARDINAL; ): CARDINAL;

PROCEDURE FetchRow (mysql_res: ResultT; ): REF ARRAY OF TEXT;

PROCEDURE FetchLengths (mysql_res: ResultT; ): RefLengthsT;

PROCEDURE FetchField (mysql_res: ResultT; ): FieldT;

PROCEDURE EscapeString (to, from: TEXT; from_length: CARDINAL; ): CARDINAL;

PROCEDURE RealEscapeString (mysql: T; to, from: TEXT; length: CARDINAL; ):
  CARDINAL;

PROCEDURE ThreadSafe (): Int32;

PROCEDURE WarningCount (mysql: T; ): Int32;

PROCEDURE Sqlstate (mysql: T; ): TEXT;

PROCEDURE ServerInit (argc: Int32; READONLY argv, groups: ARRAY OF TEXT; ):
  Int32;

PROCEDURE ServerEnd ();

PROCEDURE ThreadEnd ();

PROCEDURE ThreadInit (): BOOLEAN;

PROCEDURE SetServerOption (mysql: T; option: INTEGER; ): Int32;

PROCEDURE GetClientInfo (): TEXT;

PROCEDURE GetClientVersion (): CARDINAL;
(*
PROCEDURE GetServerName (mysql: T; ): TEXT;

PROCEDURE GetOption (mysql: T; option: INTEGER; arg: ADDRESS; ): Int32;
*)
PROCEDURE HexString (to, from: TEXT; len: CARDINAL; ): CARDINAL;

PROCEDURE GetSocket (mysql: T; ): Int32;

PROCEDURE GetTimeoutValue (mysql: T; ): Int32;

PROCEDURE GetTimeoutValueMs (mysql: T; ): Int32;

PROCEDURE Debug (debug: TEXT; );

PROCEDURE NetReadPacket (mysql: T; ): CARDINAL;

PROCEDURE NetFieldLength (READONLY packet: ARRAY OF TEXT; ): CARDINAL;

PROCEDURE Embedded (): BOOLEAN;

PROCEDURE GetParameters (): ParametersT;

PROCEDURE CloseStart (sock: T; ): Int32;

PROCEDURE CloseCont (sock: T; status: Int32; ): Int32;

PROCEDURE CommitStart (ret: TEXT; mysql: T; ): Int32;

PROCEDURE CommitCont (ret: TEXT; mysql: T; status: Int32; ): Int32;

PROCEDURE DumpDebugInfoCont
  (VAR ret: Int32; mysql: T; ready_status: Int32; ): Int32;

PROCEDURE DumpDebugInfoStart (VAR ret: Int32; mysql: T; ): Int32;

PROCEDURE RollbackStart (ret: TEXT; mysql: T; ): Int32;

PROCEDURE RollbackCont (ret: TEXT; mysql: T; status: Int32; ): Int32;

PROCEDURE AutocommitStart (ret: TEXT; mysql: T; auto_mode: BOOLEAN; ):
  Int32;

PROCEDURE ListFieldsCont (ret: ResultT; mysql: T; ready_status: Int32; ):
  Int32;

PROCEDURE ListFieldsStart (ret: ResultT; mysql: T; table, wild: TEXT; ):
  Int32;

PROCEDURE AutocommitCont (ret: TEXT; mysql: T; status: Int32; ): Int32;

PROCEDURE NextResultStart (VAR ret: Int32; mysql: T; ): Int32;

PROCEDURE NextResultCont (VAR ret: Int32; mysql: T; status: Int32; ):
  Int32;

PROCEDURE SelectDbStart (VAR ret: Int32; mysql: T; db: TEXT; ): Int32;

PROCEDURE SelectDbCont (VAR ret: Int32; mysql: T; ready_status: Int32; ):
  Int32;
(*
PROCEDURE StmtWarningCount (stmt: StmtT; ): Int32;
*)
PROCEDURE StmtNextResultStart (VAR ret: Int32; stmt: StmtT; ): Int32;

PROCEDURE StmtNextResultCont
  (VAR ret: Int32; stmt: StmtT; status: Int32; ): Int32;

PROCEDURE SetCharacterSetStart (VAR ret: Int32; mysql: T; csname: TEXT; ):
  Int32;

PROCEDURE SetCharacterSetCont (VAR ret: Int32; mysql: T; status: Int32; ):
  Int32;

PROCEDURE ChangeUserStart (ret: TEXT; mysql: T; user, passwd, db: TEXT; ):
  Int32;

PROCEDURE ChangeUserCont (ret: TEXT; mysql: T; status: Int32; ): Int32;

PROCEDURE RealConnectStart (VAR ret                   : T;
                                mysql                 : T;
                                host, user, passwd, db: TEXT;
                                port                  : Int32;
                                unix_socket           : TEXT;
                                clientflag            : CARDINAL; ): Int32;

PROCEDURE RealConnectCont (VAR ret: T; mysql: T; status: Int32; ): Int32;

PROCEDURE QueryStart (VAR ret: Int32; mysql: T; q: TEXT; ): Int32;

PROCEDURE QueryCont (VAR ret: Int32; mysql: T; status: Int32; ): Int32;

PROCEDURE SendQueryStart
  (VAR ret: Int32; mysql: T; q: TEXT; length: CARDINAL; ): Int32;

PROCEDURE SendQueryCont (VAR ret: Int32; mysql: T; status: Int32; ): Int32;

PROCEDURE RealQueryStart
  (VAR ret: Int32; mysql: T; q: TEXT; length: CARDINAL; ): Int32;

PROCEDURE RealQueryCont (VAR ret: Int32; mysql: T; status: Int32; ): Int32;

PROCEDURE StoreResultStart (ret: ResultT; mysql: T; ): Int32;

PROCEDURE StoreResultCont (ret: ResultT; mysql: T; status: Int32; ): Int32;

PROCEDURE ShutdownStart
  (VAR ret: Int32; mysql: T; shutdown_level: INTEGER; ): Int32;

PROCEDURE ShutdownCont (VAR ret: Int32; mysql: T; status: Int32; ): Int32;

PROCEDURE RefreshStart
  (VAR ret: Int32; mysql: T; refresh_options: Int32; ): Int32;

PROCEDURE RefreshCont (VAR ret: Int32; mysql: T; status: Int32; ): Int32;

PROCEDURE KillStart (VAR ret: Int32; mysql: T; pid: CARDINAL; ): Int32;

PROCEDURE KillCont (VAR ret: Int32; mysql: T; status: Int32; ): Int32;

PROCEDURE SetServerOptionStart
  (VAR ret: Int32; mysql: T; option: INTEGER; ): Int32;

PROCEDURE SetServerOptionCont (VAR ret: Int32; mysql: T; status: Int32; ):
  Int32;

PROCEDURE PingStart (VAR ret: Int32; mysql: T; ): Int32;

PROCEDURE PingCont (VAR ret: Int32; mysql: T; status: Int32; ): Int32;

PROCEDURE StatStart (READONLY ret: ARRAY OF TEXT; mysql: T; ): Int32;

PROCEDURE StatCont
  (READONLY ret: ARRAY OF TEXT; mysql: T; status: Int32; ): Int32;

PROCEDURE FreeResultStart (mysql_res: ResultT; ): Int32;

PROCEDURE FreeResultCont (mysql_res: ResultT; status: Int32; ): Int32;

PROCEDURE FetchRowStart (VAR ret: REF ARRAY OF TEXT; mysql_res: ResultT; ):
  Int32;

PROCEDURE FetchRowCont
  (VAR ret: REF ARRAY OF TEXT; mysql_res: ResultT; status: Int32; ): Int32;

PROCEDURE ReadQueryResultStart (ret: TEXT; mysql: T; ): Int32;

PROCEDURE ReadQueryResultCont (ret: TEXT; mysql: T; status: Int32; ):
  Int32;
(*
PROCEDURE ResetConnectionStart (VAR ret: Int32; mysql: T; ): Int32;

PROCEDURE ResetConnectionCont (VAR ret: Int32; mysql: T; status: Int32; ):
  Int32;

PROCEDURE SessionTrackGetNext (         mysql : T;
                                        type  : INTEGER;
                               READONLY data  : ARRAY OF TEXT;
                               VAR      length: INTEGER;       ): Int32;

PROCEDURE SessionTrackGetFirst (         mysql : T;
                                         type  : INTEGER;
                                READONLY data  : ARRAY OF TEXT;
                                VAR      length: INTEGER;       ): Int32;
*)
PROCEDURE StmtPrepareStart
  (VAR ret: Int32; stmt: StmtT; query: TEXT; length: CARDINAL; ): Int32;

PROCEDURE StmtPrepareCont (VAR ret: Int32; stmt: StmtT; status: Int32; ):
  Int32;

PROCEDURE StmtExecuteStart (VAR ret: Int32; stmt: StmtT; ): Int32;

PROCEDURE StmtExecuteCont (VAR ret: Int32; stmt: StmtT; status: Int32; ):
  Int32;

PROCEDURE StmtFetchStart (VAR ret: Int32; stmt: StmtT; ): Int32;

PROCEDURE StmtFetchCont (VAR ret: Int32; stmt: StmtT; status: Int32; ):
  Int32;

PROCEDURE StmtStoreResultStart (VAR ret: Int32; stmt: StmtT; ): Int32;

PROCEDURE StmtStoreResultCont
  (VAR ret: Int32; stmt: StmtT; status: Int32; ): Int32;

PROCEDURE StmtCloseStart (ret: TEXT; stmt: StmtT; ): Int32;

PROCEDURE StmtCloseCont (ret: TEXT; stmt: StmtT; status: Int32; ): Int32;

PROCEDURE StmtResetStart (ret: TEXT; stmt: StmtT; ): Int32;

PROCEDURE StmtResetCont (ret: TEXT; stmt: StmtT; status: Int32; ): Int32;

PROCEDURE StmtFreeResultStart (ret: TEXT; stmt: StmtT; ): Int32;

PROCEDURE StmtFreeResultCont (ret: TEXT; stmt: StmtT; status: Int32; ):
  Int32;

PROCEDURE StmtSendLongDataStart (ret         : TEXT;
                                 stmt        : StmtT;
                                 param_number: Int32;
                                 data        : TEXT;
                                 len         : CARDINAL; ): Int32;

PROCEDURE StmtSendLongDataCont (ret: TEXT; stmt: StmtT; status: Int32; ):
  Int32;
(*
PROCEDURE ResetConnection (mysql: T; ): Int32;
*)

END MySQL.

