---
name: I386_LINUX
# Cross-compile for i686-linux-gnu on x86_64 host

on:
  workflow_call:
    inputs:
      os:
        default: ubuntu-latest
        required: false
        type: string
      release:
        default: https://github.com/modula3/cm3/releases/download/d5.11.4
        required: false
        type: string
      bootstrap:
        default: cm3-boot-I386_LINUX-d5.11.4.tar.xz
        required: false
        type: string

jobs:
  build-and-test:
    runs-on: ${{ inputs.os }}
    timeout-minutes: 45

    strategy:
      fail-fast: false
      matrix:
        backend: [c, gcc]

    env:
      CM3_TARGET: I386_LINUX

    steps:
    - name: Install prerequisites
      run: |
        sudo apt-get update --quiet
        sudo apt-get install --quiet --assume-yes g++-multilib
        sudo apt-get install --quiet --assume-yes g++-multilib-i686-linux-gnu
        sudo apt-get install --quiet --assume-yes ninja-build

    - name: Define install location
      run: |
        echo CM3_INSTALL="$(pwd)/../install" >> $GITHUB_ENV

    - name: Fetch sources
      uses: actions/checkout@v2

    - name: Install bootstrap release
      env:
        CMAKE_TOOLCHAIN_FILE: scripts/i686-linux-gnu.toolchain.cmake
      run: |
        mkdir ../bootstrap ../build
        curl --location --silent "${{ inputs.release }}/${{ inputs.bootstrap }}" | tar Jxf - --directory=../bootstrap --strip-components=1
        cmake -S ../bootstrap -B ../build -G Ninja -DCMAKE_INSTALL_PREFIX="${CM3_INSTALL}" -DCMAKE_TOOLCHAIN_FILE="$(pwd)/${CMAKE_TOOLCHAIN_FILE}"
        cmake --build ../build
        cmake --install ../build
        echo "${CM3_INSTALL}/bin" >> $GITHUB_PATH

    - name: Build all the things
      run: |
        scripts/concierge.py full-upgrade --backend "${{ matrix.backend }}" -DM3CC_TARGET=I386_LINUX headless -m3gdb

    - name: Run compiler validation suite
      continue-on-error: true
      run: |
        cm3 -DHTML
      working-directory: m3-sys/m3tests

    - name: Generate test report
      uses: dorny/test-reporter@v1
      with:
        name: ${{ format('m3tests ({0}, {1})', env.CM3_TARGET, matrix.backend) }}
        fail-on-error: false
        max-annotations: 49
        path: m3-sys/m3tests/m3tests-results.xml
        reporter: java-junit
