---
name: check release
on: workflow_dispatch
jobs:
  check-binary-release:
    strategy:
      fail-fast: false
      matrix:
        os: ["macOS-10.15", "macOS-11", "ubuntu-18.04", "ubuntu-20.04"]
    runs-on: ${{ matrix.os }}
    env:
      TAG: d5.11.3
    steps:
    - name: Setup environment (macOS)
      if: startsWith(matrix.os, 'macOS')
      run: |
        echo "RELEASE=cm3-all-AMD64_DARWIN-${TAG}-Darwin20.6.0-20211007" >> $GITHUB_ENV
    - name: Setup environment (ubuntu-18.04)
      if: matrix.os == 'ubuntu-18.04'
      run: |
        echo "RELEASE=cm3-all-AMD64_LINUX-${TAG}-Linux4.15.0-20211008" >> $GITHUB_ENV
    - name: Setup environment (ubuntu-20.04)
      if: matrix.os == 'ubuntu-20.04'
      run: |
        echo "RELEASE=cm3-all-AMD64_LINUX-${TAG}-Linux5.4.0-20211008" >> $GITHUB_ENV
    - name: Install prerequisites (macOS)
      if: startsWith(matrix.os, 'macOS')
      run: |
        brew update
        brew install xquartz libxaw libxft
    - name: Install prerequisites (ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update --quiet
        sudo apt-get install --quiet --assume-yes libglu1-mesa-dev xorg-dev
    - name: Install binary release
      run: |
        curl "https://github.com/modula3/cm3/releases/download/${TAG}/${RELEASE}.tar.gz" --location --remote-name --silent
        tar zxf "${RELEASE}.tar.gz"
        echo "$(pwd)/${RELEASE}/bin" >> $GITHUB_PATH
    - name: Download source release
      run: |
        curl "https://github.com/modula3/cm3/archive/refs/tags/${TAG}.tar.gz" --location --remote-name --silent
        tar zxf "${TAG}.tar.gz"
    - name: Build all the things
      run: |
        cd "cm3-${TAG}/scripts/python"
        ./do-cm3-all.py buildship
  check-bootstrap-release:
    strategy:
      fail-fast: false
      matrix:
        os: ["macOS-10.15", "macOS-11", "ubuntu-18.04", "ubuntu-20.04"]
    runs-on: ${{ matrix.os }}
    env:
      TAG: d5.11.3
    steps:
    - name: Setup environment (macOS)
      if: startsWith(matrix.os, 'macOS')
      run: |
        echo "RELEASE=cm3-boot-AMD64_DARWIN-${TAG}-20211007" >> $GITHUB_ENV
    - name: Setup environment (ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        echo "RELEASE=cm3-boot-AMD64_LINUX-${TAG}-20211008" >> $GITHUB_ENV
    - name: Install prerequisites (macOS)
      if: startsWith(matrix.os, 'macOS')
      run: |
        brew update
        brew install xquartz libxaw libxft
    - name: Install prerequisites (ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update --quiet
        sudo apt-get install --quiet --assume-yes libglu1-mesa-dev xorg-dev
    - name: Install bootstrap release
      run: |
        mkdir -p cm3/bin
        echo "$(pwd)/cm3/bin" >> $GITHUB_PATH
        curl "https://github.com/modula3/cm3/releases/download/${TAG}/${RELEASE}.tgz" --location --remote-name --silent
        tar zxf "${RELEASE}.tgz"
        cd "${RELEASE}"
        make
        cp cm3 ../cm3/bin
    - name: Download source release
      run: |
        curl "https://github.com/modula3/cm3/archive/refs/tags/${TAG}.tar.gz" --location --remote-name --silent
        tar zxf "${TAG}.tar.gz"
    - name: FIXME: Current release still tries to build mariadb
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sed -e /MYSQL/d -i "cm3-${TAG}/m3-sys/cminstall/src/config-no-install/Linux.common"
    - name: Run bootstrap second stage
      run: |
        cd "cm3-${TAG}/scripts/python"
        ./boot2min.py
    - name: Build all the things
      run: |
        cd "cm3-${TAG}/scripts/python"
        ./do-cm3-all.py buildship

# vim: expandtab
