I believe a lot of this applies to Hudson as well.


Make sure you have bc. It is not in the default minimal Debian install and without
it you get many errors.
 sudo apt-get install bc
 bc
   make sure it runs
 control-d

You also need flex and maybe bison to build m3pp:
 sudo apt-get install flex bison

First have a working minimal cm3 install.
All you need is cm3 and cm3cg.
You don't even need a config file or m3core or libm3. Really.
Even cm3cg maybe isn't needed.


Install it, like so:
 mkdir -p ~/work/cm3-inst/last-ok/bin/config
 mkdir -p ~/work/cm3-inst/prev-ok/bin/config
 mkdir -p ~/work/cm3-inst/current/bin/config
 copy cm3 and cm3cg to the bin directories
 copy cvsroot/m3-sys/cminstall/src/config to the config directories
 create cm3.cfg in the bin directories with this content:
   INSTALL_ROOT = path() & "/.."
   include(path() & "/config/" & HOST)

  There is no "meta syntax" there, path() and HOST are real constructs.
  HOST requires a recent cm3. If your cm3 is old, fill in LINUXLIBC6
   or AMD64_FREEBSD, etc. (within the quotes)


 These paths ~/work/cm3-inst are what the scripts use.
 I don't know what they are or if you need all three.

 Tinderbox also supports building from the "last release".
 That is not covered here.

 You don't need any other cm3 anywhere or in $PATH, I believe.

 edit scripts/regression/cm3.build, scripts/regression/defs.sh etc.
  Look for the commented out use of ssh or scp and uncomment it


specifically, cm3.build:

# function used to send results to a tinderbox server.
# per default it is empty so the build-log will just be output to stdout.
tinderbox_mailer() { 
  true	# needed if function is empty without this...
  # to report to the elego tinderbox host, check README and uncomment this:
  #cat "$1" | ssh tinderbox.elego.de "sudo -u tinderbox \
  #/usr/local/tinderbox/tinderbox-cgi/processmail_builds.cgi" 
}


change to:

# function used to send results to a tinderbox server.
# per default it is empty so the build-log will just be output to stdout.
tinderbox_mailer() { 
  true	# needed if function is empty without this...
  # to report to the elego tinderbox host, check README and uncomment this:
  cat "$1" | ssh tinderbox.elego.de "sudo -u tinderbox \
  /usr/local/tinderbox/tinderbox-cgi/processmail_builds.cgi" 
}


and remove these lines:


===================================================================
RCS file: /usr/cvs/cm3/scripts/regression/defs.sh,v
retrieving revision 1.68
diff -r1.68 defs.sh
365,370d364
<   echo "cleaning CM3 workspaces..."
<   pat=`echo "${WS}" | sed -e "s/${DS}/*/"`
<   echo "${pat}"
<   ls -1d ${pat} | cleanup_all_but_last_n ${n}
<   echo
<

possibly filling in your username before "tinderbox".
(If your local username and birch username are different,
for example I am "jay" locally but "jkrell" on birch,)


and remove this if:

cvs -z3 diff -u cm3.build

 do_tests() {
-  if [ "${BUILD_REL}" = "rel" ] ; then
      std_tests
-  fi
 }

Otherwise the tests won't run -- the idea being that you will
do a "last release" build, but I haven't done that.


Get tinderbox/m3/birch/etc. into your known hosts:
  ssh tinderbox.elego.de
  ssh birch.elegosoft.com


possibly putting your username with an at sign in front.


If you don't do this, your Tinderbox run might hang asking if it is ok.
Both hangs occur near the beginning, so you can just skip this step and let
those happen and say yes to them.


copy user-defs.sh-example to user-defs.sh and edit it.
esp. CM3CVSUSER, which you may be able to just remove.


Get a new complete cm3 checkout.

WS=${HOME}/work/cm3-ws/${TESTHOSTNAME:-`hostname | sed -e 's/\..*//'`}-${MONTH_DS}


that is, echo $WS roughly:

 /home/jay/work/cm3-ws/localhost-2009-07 


This is based on the default, but the default makes a new checkout for every run, which
rarely works. This setting makes a new one for each month, which probably also isn't great.
I will improve this soon.
NOTE that this is dependent on user-defs.sh.



ok:
 mkdir -p $WS
 cd $WS
 cvs -d :ext:USERNAME@modula3.elegosoft.com:/usr/cvs checkout -l cm3
 -l means just create the directory, don't recurse, it is fast and reliable
 cd cm3
 cvs upd -ldAP . m3-sys m3-libs m3-ui scripts www doc
 again -l is inhibiting making this a long unreliable process
 for a in m3-sys m3-libs m3-ui scripts www doc; do cvs -z3 upd -dAP $a; done
 This is doing the larger work but split up into pieces.
 And then try to finish off the rest:
 cvs -z3 upd -dAP

Just keep at the cvs -z3 upd -dAP until it doesn't have an error.
When it does error, I delete whatever directory it was last in, since I don't
trust CVS to be atomic.



now go to your usual working cm3 CVS tree.


  cd scripts/regression  
  cvs -z3 upd -dAP  #  just in case  
  cat user-defs.sh # one more look at it  
  cat README  
  # look at the last line, it should read:  
  BUILD_REL=lastok ./tinderbox-build.sh ./cm3.build  

  I put BUILD_REL in user-defs.sh.  

  So just:  

  ./tinderbox-build.sh ./cm3.build  


    What I actually do is:

  nohup ./tinderbox-build.sh ./cm3.build &  
  logout  

  log back in  
  cd scripts/regression  
  tail -f nohup.out  


  But your first time you probably shouldn't, in case you get the ssh prompts or something.  


  I had a few lines at the top of cm3.build, but that should be redundant with user-defs.sh now.  


 - Jay