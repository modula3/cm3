(*******************************************************************************
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
*******************************************************************************)

using System;
public class DIBuilder : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal DIBuilder(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected DIBuilder() : this(IntPtr.Zero, false) {
  }

  ~llvm::DIBuilder() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      M3DIBuilderRaw.delete_DIBuilder(swigCPtr);
      swigCMemOwn = false;
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  internal static IntPtr getCPtr(llvm::DIBuilder obj) {
    RETURN (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

   DIBuilder(llvm::Module M, BOOLEAN AllowUnresolved, DICompileUnit CU) : this(M3DIBuilderRaw.new_DIBuilder0(  = *(llvm::Module **)&M;
,   = AllowUnresolved ? true : false; ,   = *(DICompileUnit **)&CU; ), true) {
  }

   DIBuilder(llvm::Module M, BOOLEAN AllowUnresolved) : this(M3DIBuilderRaw.new_DIBuilder1(  = *(llvm::Module **)&M;
,   = AllowUnresolved ? true : false; ), true) {
  }

   DIBuilder(llvm::Module M) : this(M3DIBuilderRaw.new_DIBuilder2(  = *(llvm::Module **)&M;
), true) {
  }

    finalize() M3DIBuilderRaw.DIBuilder_finalize(swigCPtr)

    finalizeSubprogram(DISubprogram SP) M3DIBuilderRaw.DIBuilder_finalizeSubprogram(swigCPtr,   = *(DISubprogram **)&SP; )

   DICompileUnit createCompileUnit(CARDINAL Lang, DIFile File, StringRef Producer, BOOLEAN isOptimized, StringRef Flags, CARDINAL RV, StringRef SplitName, DICompileUnit::DebugEmissionKind Kind, uint64_t DWOId, BOOLEAN SplitDebugInlining, BOOLEAN DebugInfoForProfiling, DICompileUnit::DebugNameTableKind NameTableKind, BOOLEAN RangesBaseAddress) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCompileUnit0(swigCPtr,   = (unsigned int)Lang; ,   = *(DIFile **)&File; ,  = StringRef(Producer->Data,Producer->Length);,   = isOptimized ? true : false; ,  = StringRef(Flags->Data,Flags->Length);,   = (unsigned int)RV; ,  = StringRef(SplitName->Data,SplitName->Length);,  = Kind;,   = (uint64_t)DWOId; ,   = SplitDebugInlining ? true : false; ,   = DebugInfoForProfiling ? true : false; ,  = NameTableKind;,   = RangesBaseAddress ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompileUnit, cPtr, false);


   DICompileUnit createCompileUnit(CARDINAL Lang, DIFile File, StringRef Producer, BOOLEAN isOptimized, StringRef Flags, CARDINAL RV, StringRef SplitName, DICompileUnit::DebugEmissionKind Kind, uint64_t DWOId, BOOLEAN SplitDebugInlining, BOOLEAN DebugInfoForProfiling, DICompileUnit::DebugNameTableKind NameTableKind) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCompileUnit1(swigCPtr,   = (unsigned int)Lang; ,   = *(DIFile **)&File; ,  = StringRef(Producer->Data,Producer->Length);,   = isOptimized ? true : false; ,  = StringRef(Flags->Data,Flags->Length);,   = (unsigned int)RV; ,  = StringRef(SplitName->Data,SplitName->Length);,  = Kind;,   = (uint64_t)DWOId; ,   = SplitDebugInlining ? true : false; ,   = DebugInfoForProfiling ? true : false; ,  = NameTableKind;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompileUnit, cPtr, false);


   DICompileUnit createCompileUnit(CARDINAL Lang, DIFile File, StringRef Producer, BOOLEAN isOptimized, StringRef Flags, CARDINAL RV, StringRef SplitName, DICompileUnit::DebugEmissionKind Kind, uint64_t DWOId, BOOLEAN SplitDebugInlining, BOOLEAN DebugInfoForProfiling) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCompileUnit2(swigCPtr,   = (unsigned int)Lang; ,   = *(DIFile **)&File; ,  = StringRef(Producer->Data,Producer->Length);,   = isOptimized ? true : false; ,  = StringRef(Flags->Data,Flags->Length);,   = (unsigned int)RV; ,  = StringRef(SplitName->Data,SplitName->Length);,  = Kind;,   = (uint64_t)DWOId; ,   = SplitDebugInlining ? true : false; ,   = DebugInfoForProfiling ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompileUnit, cPtr, false);


   DICompileUnit createCompileUnit(CARDINAL Lang, DIFile File, StringRef Producer, BOOLEAN isOptimized, StringRef Flags, CARDINAL RV, StringRef SplitName, DICompileUnit::DebugEmissionKind Kind, uint64_t DWOId, BOOLEAN SplitDebugInlining) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCompileUnit3(swigCPtr,   = (unsigned int)Lang; ,   = *(DIFile **)&File; ,  = StringRef(Producer->Data,Producer->Length);,   = isOptimized ? true : false; ,  = StringRef(Flags->Data,Flags->Length);,   = (unsigned int)RV; ,  = StringRef(SplitName->Data,SplitName->Length);,  = Kind;,   = (uint64_t)DWOId; ,   = SplitDebugInlining ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompileUnit, cPtr, false);


   DICompileUnit createCompileUnit(CARDINAL Lang, DIFile File, StringRef Producer, BOOLEAN isOptimized, StringRef Flags, CARDINAL RV, StringRef SplitName, DICompileUnit::DebugEmissionKind Kind, uint64_t DWOId) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCompileUnit4(swigCPtr,   = (unsigned int)Lang; ,   = *(DIFile **)&File; ,  = StringRef(Producer->Data,Producer->Length);,   = isOptimized ? true : false; ,  = StringRef(Flags->Data,Flags->Length);,   = (unsigned int)RV; ,  = StringRef(SplitName->Data,SplitName->Length);,  = Kind;,   = (uint64_t)DWOId; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompileUnit, cPtr, false);


   DICompileUnit createCompileUnit(CARDINAL Lang, DIFile File, StringRef Producer, BOOLEAN isOptimized, StringRef Flags, CARDINAL RV, StringRef SplitName, DICompileUnit::DebugEmissionKind Kind) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCompileUnit5(swigCPtr,   = (unsigned int)Lang; ,   = *(DIFile **)&File; ,  = StringRef(Producer->Data,Producer->Length);,   = isOptimized ? true : false; ,  = StringRef(Flags->Data,Flags->Length);,   = (unsigned int)RV; ,  = StringRef(SplitName->Data,SplitName->Length);,  = Kind;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompileUnit, cPtr, false);


   DICompileUnit createCompileUnit(CARDINAL Lang, DIFile File, StringRef Producer, BOOLEAN isOptimized, StringRef Flags, CARDINAL RV, StringRef SplitName) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCompileUnit6(swigCPtr,   = (unsigned int)Lang; ,   = *(DIFile **)&File; ,  = StringRef(Producer->Data,Producer->Length);,   = isOptimized ? true : false; ,  = StringRef(Flags->Data,Flags->Length);,   = (unsigned int)RV; ,  = StringRef(SplitName->Data,SplitName->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompileUnit, cPtr, false);


   DICompileUnit createCompileUnit(CARDINAL Lang, DIFile File, StringRef Producer, BOOLEAN isOptimized, StringRef Flags, CARDINAL RV) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCompileUnit7(swigCPtr,   = (unsigned int)Lang; ,   = *(DIFile **)&File; ,  = StringRef(Producer->Data,Producer->Length);,   = isOptimized ? true : false; ,  = StringRef(Flags->Data,Flags->Length);,   = (unsigned int)RV; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompileUnit, cPtr, false);


   DIFile createFile(StringRef Filename, StringRef Directory, Optional< DIFile::ChecksumInfo< StringRef > > Checksum, Optional< StringRef > Source) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFile0(swigCPtr,  = StringRef(Filename->Data,Filename->Length);,  = StringRef(Directory->Data,Directory->Length);, 
  SmallString<32> cs(Checksum);
(&)->emplace(llvm::DIFile::CSK_MD5, cs);,  = StringRef(Source->Data,Source->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIFile, cPtr, false);


   DIFile createFile(StringRef Filename, StringRef Directory, Optional< DIFile::ChecksumInfo< StringRef > > Checksum) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFile1(swigCPtr,  = StringRef(Filename->Data,Filename->Length);,  = StringRef(Directory->Data,Directory->Length);, 
  SmallString<32> cs(Checksum);
(&)->emplace(llvm::DIFile::CSK_MD5, cs););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIFile, cPtr, false);


   DIFile createFile(StringRef Filename, StringRef Directory) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFile2(swigCPtr,  = StringRef(Filename->Data,Filename->Length);,  = StringRef(Directory->Data,Directory->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIFile, cPtr, false);


   DIMacro createMacro(DIMacroFile Parent, CARDINAL Line, CARDINAL MacroType, StringRef Name, StringRef Value) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMacro0(swigCPtr,   = *(DIMacroFile **)&Parent; ,   = (unsigned int)Line; ,   = (unsigned int)MacroType; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(Value->Data,Value->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIMacro, cPtr, false);


   DIMacro createMacro(DIMacroFile Parent, CARDINAL Line, CARDINAL MacroType, StringRef Name) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMacro1(swigCPtr,   = *(DIMacroFile **)&Parent; ,   = (unsigned int)Line; ,   = (unsigned int)MacroType; ,  = StringRef(Name->Data,Name->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIMacro, cPtr, false);


   DIMacroFile createTempMacroFile(DIMacroFile Parent, CARDINAL Line, DIFile File) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempMacroFile(swigCPtr,   = *(DIMacroFile **)&Parent; ,   = (unsigned int)Line; ,   = *(DIFile **)&File; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIMacroFile, cPtr, false);


   DIEnumerator createEnumerator(StringRef Name, int64_t Val, BOOLEAN IsUnsigned) 
    cPtr := M3DIBuilderRaw.DIBuilder_createEnumerator0(swigCPtr,  = StringRef(Name->Data,Name->Length);,   = (int64_t)Val; ,   = IsUnsigned ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIEnumerator, cPtr, false);


   DIEnumerator createEnumerator(StringRef Name, int64_t Val) 
    cPtr := M3DIBuilderRaw.DIBuilder_createEnumerator1(swigCPtr,  = StringRef(Name->Data,Name->Length);,   = (int64_t)Val; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIEnumerator, cPtr, false);


   DIBasicType createUnspecifiedType(StringRef Name) 
    cPtr := M3DIBuilderRaw.DIBuilder_createUnspecifiedType(swigCPtr,  = StringRef(Name->Data,Name->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIBasicType, cPtr, false);


   DIBasicType createNullPtrType() 
    cPtr := M3DIBuilderRaw.DIBuilder_createNullPtrType(swigCPtr);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIBasicType, cPtr, false);


   DIBasicType createBasicType(StringRef Name, uint64_t SizeInBits, CARDINAL Encoding, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createBasicType0(swigCPtr,  = StringRef(Name->Data,Name->Length);,   = (uint64_t)SizeInBits; ,   = (unsigned int)Encoding; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIBasicType, cPtr, false);


   DIBasicType createBasicType(StringRef Name, uint64_t SizeInBits, CARDINAL Encoding) 
    cPtr := M3DIBuilderRaw.DIBuilder_createBasicType1(swigCPtr,  = StringRef(Name->Data,Name->Length);,   = (uint64_t)SizeInBits; ,   = (unsigned int)Encoding; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIBasicType, cPtr, false);


   DIDerivedType createQualifiedType(CARDINAL Tag, DIType FromTy) 
    cPtr := M3DIBuilderRaw.DIBuilder_createQualifiedType(swigCPtr,   = (unsigned int)Tag; ,   = *(DIType **)&FromTy; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createPointerType(DIType PointeeTy, uint64_t SizeInBits, uint32_t AlignInBits, Optional< unsigned int > DWARFAddressSpace, StringRef Name) 
    cPtr := M3DIBuilderRaw.DIBuilder_createPointerType0(swigCPtr,   = *(DIType **)&PointeeTy; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = None;,  = StringRef(Name->Data,Name->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createPointerType(DIType PointeeTy, uint64_t SizeInBits, uint32_t AlignInBits, Optional< unsigned int > DWARFAddressSpace) 
    cPtr := M3DIBuilderRaw.DIBuilder_createPointerType1(swigCPtr,   = *(DIType **)&PointeeTy; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = None;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createPointerType(DIType PointeeTy, uint64_t SizeInBits, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createPointerType2(swigCPtr,   = *(DIType **)&PointeeTy; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createPointerType(DIType PointeeTy, uint64_t SizeInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createPointerType3(swigCPtr,   = *(DIType **)&PointeeTy; ,   = (uint64_t)SizeInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createMemberPointerType(DIType PointeeTy, DIType Class, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMemberPointerType0(swigCPtr,   = *(DIType **)&PointeeTy; ,   = *(DIType **)&Class; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createMemberPointerType(DIType PointeeTy, DIType Class, uint64_t SizeInBits, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMemberPointerType1(swigCPtr,   = *(DIType **)&PointeeTy; ,   = *(DIType **)&Class; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createMemberPointerType(DIType PointeeTy, DIType Class, uint64_t SizeInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMemberPointerType2(swigCPtr,   = *(DIType **)&PointeeTy; ,   = *(DIType **)&Class; ,   = (uint64_t)SizeInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createReferenceType(CARDINAL Tag, DIType RTy, uint64_t SizeInBits, uint32_t AlignInBits, Optional< unsigned int > DWARFAddressSpace) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReferenceType0(swigCPtr,   = (unsigned int)Tag; ,   = *(DIType **)&RTy; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = None;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createReferenceType(CARDINAL Tag, DIType RTy, uint64_t SizeInBits, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReferenceType1(swigCPtr,   = (unsigned int)Tag; ,   = *(DIType **)&RTy; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createReferenceType(CARDINAL Tag, DIType RTy, uint64_t SizeInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReferenceType2(swigCPtr,   = (unsigned int)Tag; ,   = *(DIType **)&RTy; ,   = (uint64_t)SizeInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createReferenceType(CARDINAL Tag, DIType RTy) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReferenceType3(swigCPtr,   = (unsigned int)Tag; ,   = *(DIType **)&RTy; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createTypedef(DIType Ty, StringRef Name, DIFile File, CARDINAL LineNo, DIScope Context, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTypedef0(swigCPtr,   = *(DIType **)&Ty; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIScope **)&Context; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createTypedef(DIType Ty, StringRef Name, DIFile File, CARDINAL LineNo, DIScope Context) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTypedef1(swigCPtr,   = *(DIType **)&Ty; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIScope **)&Context; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createFriend(DIType Ty, DIType FriendTy) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFriend(swigCPtr,   = *(DIType **)&Ty; ,   = *(DIType **)&FriendTy; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createInheritance(DIType Ty, DIType BaseTy, uint64_t BaseOffset, uint32_t VBPtrOffset, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createInheritance(swigCPtr,   = *(DIType **)&Ty; ,   = *(DIType **)&BaseTy; ,   = (uint64_t)BaseOffset; ,   = (uint32_t)VBPtrOffset; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createMemberType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, uint64_t SizeInBits, uint32_t AlignInBits, uint64_t OffsetInBits, DINode::DIFlags Flags, DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMemberType(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,   = (uint64_t)OffsetInBits; ,  = Flags;,   = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createVariantMemberType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, uint64_t SizeInBits, uint32_t AlignInBits, uint64_t OffsetInBits, llvm::Constant Discriminant, DINode::DIFlags Flags, DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createVariantMemberType(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,   = (uint64_t)OffsetInBits; ,   = *(llvm::Constant **)&Discriminant; ,  = Flags;,   = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createBitFieldMemberType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, uint64_t SizeInBits, uint64_t OffsetInBits, uint64_t StorageOffsetInBits, DINode::DIFlags Flags, DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createBitFieldMemberType(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = (uint64_t)SizeInBits; ,   = (uint64_t)OffsetInBits; ,   = (uint64_t)StorageOffsetInBits; ,  = Flags;,   = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createStaticMemberType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, DIType Ty, DINode::DIFlags Flags, llvm::Constant Val, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createStaticMemberType0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,  = Flags;,   = *(llvm::Constant **)&Val; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createStaticMemberType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, DIType Ty, DINode::DIFlags Flags, llvm::Constant Val) 
    cPtr := M3DIBuilderRaw.DIBuilder_createStaticMemberType1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,  = Flags;,   = *(llvm::Constant **)&Val; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIDerivedType createObjCIVar(StringRef Name, DIFile File, CARDINAL LineNo, uint64_t SizeInBits, uint32_t AlignInBits, uint64_t OffsetInBits, DINode::DIFlags Flags, DIType Ty, MDNode PropertyNode) 
    cPtr := M3DIBuilderRaw.DIBuilder_createObjCIVar(swigCPtr,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,   = (uint64_t)OffsetInBits; ,  = Flags;,   = *(DIType **)&Ty; ,   = *(MDNode **)&PropertyNode; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIDerivedType, cPtr, false);


   DIObjCProperty createObjCProperty(StringRef Name, DIFile File, CARDINAL LineNumber, StringRef GetterName, StringRef SetterName, CARDINAL PropertyAttributes, DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createObjCProperty(swigCPtr,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,  = StringRef(GetterName->Data,GetterName->Length);,  = StringRef(SetterName->Data,SetterName->Length);,   = (unsigned int)PropertyAttributes; ,   = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIObjCProperty, cPtr, false);


   DICompositeType createClassType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, uint64_t OffsetInBits, DINode::DIFlags Flags, DIType DerivedFrom, DINodeArray Elements, DIType VTableHolder, MDNode TemplateParms, StringRef UniqueIdentifier) 
    cPtr := M3DIBuilderRaw.DIBuilder_createClassType0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,   = (uint64_t)OffsetInBits; ,  = Flags;,   = *(DIType **)&DerivedFrom; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = *(DIType **)&VTableHolder; ,   = *(MDNode **)&TemplateParms; ,  = StringRef(UniqueIdentifier->Data,UniqueIdentifier->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createClassType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, uint64_t OffsetInBits, DINode::DIFlags Flags, DIType DerivedFrom, DINodeArray Elements, DIType VTableHolder, MDNode TemplateParms) 
    cPtr := M3DIBuilderRaw.DIBuilder_createClassType1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,   = (uint64_t)OffsetInBits; ,  = Flags;,   = *(DIType **)&DerivedFrom; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = *(DIType **)&VTableHolder; ,   = *(MDNode **)&TemplateParms; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createClassType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, uint64_t OffsetInBits, DINode::DIFlags Flags, DIType DerivedFrom, DINodeArray Elements, DIType VTableHolder) 
    cPtr := M3DIBuilderRaw.DIBuilder_createClassType2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,   = (uint64_t)OffsetInBits; ,  = Flags;,   = *(DIType **)&DerivedFrom; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = *(DIType **)&VTableHolder; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createClassType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, uint64_t OffsetInBits, DINode::DIFlags Flags, DIType DerivedFrom, DINodeArray Elements) 
    cPtr := M3DIBuilderRaw.DIBuilder_createClassType3(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,   = (uint64_t)OffsetInBits; ,  = Flags;,   = *(DIType **)&DerivedFrom; ,  argp = *(DINodeArray **)&Elements;
    = *argp; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createStructType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DIType DerivedFrom, DINodeArray Elements, CARDINAL RunTimeLang, DIType VTableHolder, StringRef UniqueIdentifier) 
    cPtr := M3DIBuilderRaw.DIBuilder_createStructType0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,   = *(DIType **)&DerivedFrom; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = (unsigned int)RunTimeLang; ,   = *(DIType **)&VTableHolder; ,  = StringRef(UniqueIdentifier->Data,UniqueIdentifier->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createStructType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DIType DerivedFrom, DINodeArray Elements, CARDINAL RunTimeLang, DIType VTableHolder) 
    cPtr := M3DIBuilderRaw.DIBuilder_createStructType1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,   = *(DIType **)&DerivedFrom; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = (unsigned int)RunTimeLang; ,   = *(DIType **)&VTableHolder; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createStructType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DIType DerivedFrom, DINodeArray Elements, CARDINAL RunTimeLang) 
    cPtr := M3DIBuilderRaw.DIBuilder_createStructType2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,   = *(DIType **)&DerivedFrom; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = (unsigned int)RunTimeLang; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createStructType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DIType DerivedFrom, DINodeArray Elements) 
    cPtr := M3DIBuilderRaw.DIBuilder_createStructType3(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,   = *(DIType **)&DerivedFrom; ,  argp = *(DINodeArray **)&Elements;
    = *argp; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createUnionType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DINodeArray Elements, CARDINAL RunTimeLang, StringRef UniqueIdentifier) 
    cPtr := M3DIBuilderRaw.DIBuilder_createUnionType0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = (unsigned int)RunTimeLang; ,  = StringRef(UniqueIdentifier->Data,UniqueIdentifier->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createUnionType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DINodeArray Elements, CARDINAL RunTimeLang) 
    cPtr := M3DIBuilderRaw.DIBuilder_createUnionType1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = (unsigned int)RunTimeLang; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createUnionType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DINodeArray Elements) 
    cPtr := M3DIBuilderRaw.DIBuilder_createUnionType2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,  argp = *(DINodeArray **)&Elements;
    = *argp; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createVariantPart(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DIDerivedType Discriminator, DINodeArray Elements, StringRef UniqueIdentifier) 
    cPtr := M3DIBuilderRaw.DIBuilder_createVariantPart0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,   = *(DIDerivedType **)&Discriminator; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,  = StringRef(UniqueIdentifier->Data,UniqueIdentifier->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createVariantPart(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, DIDerivedType Discriminator, DINodeArray Elements) 
    cPtr := M3DIBuilderRaw.DIBuilder_createVariantPart1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,   = *(DIDerivedType **)&Discriminator; ,  argp = *(DINodeArray **)&Elements;
    = *argp; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DITemplateTypeParameter createTemplateTypeParameter(DIScope Scope, StringRef Name, DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTemplateTypeParameter(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DITemplateTypeParameter, cPtr, false);


   DITemplateValueParameter createTemplateValueParameter(DIScope Scope, StringRef Name, DIType Ty, llvm::Constant Val) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTemplateValueParameter(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIType **)&Ty; ,   = *(llvm::Constant **)&Val; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DITemplateValueParameter, cPtr, false);


   DITemplateValueParameter createTemplateTemplateParameter(DIScope Scope, StringRef Name, DIType Ty, StringRef Val) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTemplateTemplateParameter(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIType **)&Ty; ,  = StringRef(Val->Data,Val->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DITemplateValueParameter, cPtr, false);


   DITemplateValueParameter createTemplateParameterPack(DIScope Scope, StringRef Name, DIType Ty, DINodeArray Val) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTemplateParameterPack(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIType **)&Ty; ,  argp = *(DINodeArray **)&Val;
    = *argp; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DITemplateValueParameter, cPtr, false);


   DICompositeType createArrayType(uint64_t Size, uint32_t AlignInBits, DIType Ty, DINodeArray Subscripts) 
    cPtr := M3DIBuilderRaw.DIBuilder_createArrayType(swigCPtr,   = (uint64_t)Size; ,   = (uint32_t)AlignInBits; ,   = *(DIType **)&Ty; ,  argp = *(DINodeArray **)&Subscripts;
    = *argp; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createVectorType(uint64_t Size, uint32_t AlignInBits, DIType Ty, DINodeArray Subscripts) 
    cPtr := M3DIBuilderRaw.DIBuilder_createVectorType(swigCPtr,   = (uint64_t)Size; ,   = (uint32_t)AlignInBits; ,   = *(DIType **)&Ty; ,  argp = *(DINodeArray **)&Subscripts;
    = *argp; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createEnumerationType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINodeArray Elements, DIType UnderlyingType, StringRef UniqueIdentifier, BOOLEAN IsScoped) 
    cPtr := M3DIBuilderRaw.DIBuilder_createEnumerationType0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = *(DIType **)&UnderlyingType; ,  = StringRef(UniqueIdentifier->Data,UniqueIdentifier->Length);,   = IsScoped ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createEnumerationType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINodeArray Elements, DIType UnderlyingType, StringRef UniqueIdentifier) 
    cPtr := M3DIBuilderRaw.DIBuilder_createEnumerationType1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = *(DIType **)&UnderlyingType; ,  = StringRef(UniqueIdentifier->Data,UniqueIdentifier->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createEnumerationType(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNumber, uint64_t SizeInBits, uint32_t AlignInBits, DINodeArray Elements, DIType UnderlyingType) 
    cPtr := M3DIBuilderRaw.DIBuilder_createEnumerationType2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNumber; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  argp = *(DINodeArray **)&Elements;
    = *argp; ,   = *(DIType **)&UnderlyingType; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DISubroutineType createSubroutineType(DITypeRefArray ParameterTypes, DINode::DIFlags Flags, CARDINAL CC) 
    cPtr := M3DIBuilderRaw.DIBuilder_createSubroutineType0(swigCPtr,  argp = *(DITypeRefArray **)&ParameterTypes;
    = *argp; ,  = Flags;,   = (unsigned int)CC; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubroutineType, cPtr, false);


   DISubroutineType createSubroutineType(DITypeRefArray ParameterTypes, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createSubroutineType1(swigCPtr,  argp = *(DITypeRefArray **)&ParameterTypes;
    = *argp; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubroutineType, cPtr, false);


   DISubroutineType createSubroutineType(DITypeRefArray ParameterTypes) 
    cPtr := M3DIBuilderRaw.DIBuilder_createSubroutineType2(swigCPtr,  argp = *(DITypeRefArray **)&ParameterTypes;
    = *argp; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubroutineType, cPtr, false);


   static DISubprogram createArtificialSubprogram(DISubprogram SP) 
    cPtr := M3DIBuilderRaw.DIBuilder_createArtificialSubprogram( arg1 = *(DISubprogram **)&SP; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   static DIType createArtificialType(DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createArtificialType( arg1 = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIType, cPtr, false);


   static DIType createObjectPointerType(DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createObjectPointerType( arg1 = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIType, cPtr, false);


   DICompositeType createForwardDecl(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang, uint64_t SizeInBits, uint32_t AlignInBits, StringRef UniqueIdentifier) 
    cPtr := M3DIBuilderRaw.DIBuilder_createForwardDecl0(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = StringRef(UniqueIdentifier->Data,UniqueIdentifier->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createForwardDecl(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang, uint64_t SizeInBits, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createForwardDecl1(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createForwardDecl(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang, uint64_t SizeInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createForwardDecl2(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; ,   = (uint64_t)SizeInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createForwardDecl(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang) 
    cPtr := M3DIBuilderRaw.DIBuilder_createForwardDecl3(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createForwardDecl(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line) 
    cPtr := M3DIBuilderRaw.DIBuilder_createForwardDecl4(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createReplaceableCompositeType(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags, StringRef UniqueIdentifier) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReplaceableCompositeType0(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;,  = StringRef(UniqueIdentifier->Data,UniqueIdentifier->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createReplaceableCompositeType(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang, uint64_t SizeInBits, uint32_t AlignInBits, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReplaceableCompositeType1(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createReplaceableCompositeType(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang, uint64_t SizeInBits, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReplaceableCompositeType2(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; ,   = (uint64_t)SizeInBits; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createReplaceableCompositeType(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang, uint64_t SizeInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReplaceableCompositeType3(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; ,   = (uint64_t)SizeInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createReplaceableCompositeType(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line, CARDINAL RuntimeLang) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReplaceableCompositeType4(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; ,   = (unsigned int)RuntimeLang; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


   DICompositeType createReplaceableCompositeType(CARDINAL Tag, StringRef Name, DIScope Scope, DIFile F, CARDINAL Line) 
    cPtr := M3DIBuilderRaw.DIBuilder_createReplaceableCompositeType5(swigCPtr,   = (unsigned int)Tag; ,  = StringRef(Name->Data,Name->Length);,   = *(DIScope **)&Scope; ,   = *(DIFile **)&F; ,   = (unsigned int)Line; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICompositeType, cPtr, false);


    retainType(DIScope T) M3DIBuilderRaw.DIBuilder_retainType(swigCPtr,   = *(DIScope **)&T; )

   DIBasicType createUnspecifiedParameter() 
    cPtr := M3DIBuilderRaw.DIBuilder_createUnspecifiedParameter(swigCPtr);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIBasicType, cPtr, false);


   DINodeArray getOrCreateArray(ArrayRef< Metadata * > Elements) 
    RETURN NEW(REF DINodeArray, M3DIBuilderRaw.DIBuilder_getOrCreateArray(swigCPtr,  argp = *(ArrayRef< Metadata * > **)&Elements;
    = *argp; ));


   DIMacroNodeArray getOrCreateMacroArray(ArrayRef< Metadata * > Elements) 
    RETURN NEW(REF DIMacroNodeArray, M3DIBuilderRaw.DIBuilder_getOrCreateMacroArray(swigCPtr,  argp = *(ArrayRef< Metadata * > **)&Elements;
    = *argp; ));


   DITypeRefArray getOrCreateTypeArray(ArrayRef< Metadata * > Elements) 
    RETURN NEW(REF DITypeRefArray, M3DIBuilderRaw.DIBuilder_getOrCreateTypeArray(swigCPtr,  argp = *(ArrayRef< Metadata * > **)&Elements;
    = *argp; ));


   DISubrange getOrCreateSubrange(int64_t Lo, int64_t Count) 
    cPtr := M3DIBuilderRaw.DIBuilder_getOrCreateSubrange0(swigCPtr,   = (int64_t)Lo; ,   = (int64_t)Count; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubrange, cPtr, false);


   DISubrange getOrCreateSubrange(int64_t Lo, Metadata CountNode) 
    cPtr := M3DIBuilderRaw.DIBuilder_getOrCreateSubrange1(swigCPtr,   = (int64_t)Lo; ,   = *(Metadata **)&CountNode; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubrange, cPtr, false);


   DIGlobalVariableExpression createGlobalVariableExpression(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit, BOOLEAN isDefined, DIExpression Expr, MDNode Decl, MDTuple TemplateParams, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createGlobalVariableExpression0(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; ,   = isDefined ? true : false; ,   = *(DIExpression **)&Expr; ,   = *(MDNode **)&Decl; ,   = *(MDTuple **)&TemplateParams; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariableExpression, cPtr, false);


   DIGlobalVariableExpression createGlobalVariableExpression(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit, BOOLEAN isDefined, DIExpression Expr, MDNode Decl, MDTuple TemplateParams) 
    cPtr := M3DIBuilderRaw.DIBuilder_createGlobalVariableExpression1(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; ,   = isDefined ? true : false; ,   = *(DIExpression **)&Expr; ,   = *(MDNode **)&Decl; ,   = *(MDTuple **)&TemplateParams; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariableExpression, cPtr, false);


   DIGlobalVariableExpression createGlobalVariableExpression(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit, BOOLEAN isDefined, DIExpression Expr, MDNode Decl) 
    cPtr := M3DIBuilderRaw.DIBuilder_createGlobalVariableExpression2(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; ,   = isDefined ? true : false; ,   = *(DIExpression **)&Expr; ,   = *(MDNode **)&Decl; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariableExpression, cPtr, false);


   DIGlobalVariableExpression createGlobalVariableExpression(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit, BOOLEAN isDefined, DIExpression Expr) 
    cPtr := M3DIBuilderRaw.DIBuilder_createGlobalVariableExpression3(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; ,   = isDefined ? true : false; ,   = *(DIExpression **)&Expr; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariableExpression, cPtr, false);


   DIGlobalVariableExpression createGlobalVariableExpression(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit, BOOLEAN isDefined) 
    cPtr := M3DIBuilderRaw.DIBuilder_createGlobalVariableExpression4(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; ,   = isDefined ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariableExpression, cPtr, false);


   DIGlobalVariableExpression createGlobalVariableExpression(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit) 
    cPtr := M3DIBuilderRaw.DIBuilder_createGlobalVariableExpression5(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariableExpression, cPtr, false);


   DIGlobalVariable createTempGlobalVariableFwdDecl(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit, MDNode Decl, MDTuple TemplateParams, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempGlobalVariableFwdDecl0(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; ,   = *(MDNode **)&Decl; ,   = *(MDTuple **)&TemplateParams; ,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariable, cPtr, false);


   DIGlobalVariable createTempGlobalVariableFwdDecl(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit, MDNode Decl, MDTuple TemplateParams) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempGlobalVariableFwdDecl1(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; ,   = *(MDNode **)&Decl; ,   = *(MDTuple **)&TemplateParams; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariable, cPtr, false);


   DIGlobalVariable createTempGlobalVariableFwdDecl(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit, MDNode Decl) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempGlobalVariableFwdDecl2(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; ,   = *(MDNode **)&Decl; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariable, cPtr, false);


   DIGlobalVariable createTempGlobalVariableFwdDecl(DIScope Context, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN IsLocalToUnit) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempGlobalVariableFwdDecl3(swigCPtr,   = *(DIScope **)&Context; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = IsLocalToUnit ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIGlobalVariable, cPtr, false);


   DILocalVariable createAutoVariable(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN AlwaysPreserve, DINode::DIFlags Flags, uint32_t AlignInBits) 
    cPtr := M3DIBuilderRaw.DIBuilder_createAutoVariable0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = AlwaysPreserve ? true : false; ,  = Flags;,   = (uint32_t)AlignInBits; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILocalVariable, cPtr, false);


   DILocalVariable createAutoVariable(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN AlwaysPreserve, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createAutoVariable1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = AlwaysPreserve ? true : false; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILocalVariable, cPtr, false);


   DILocalVariable createAutoVariable(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN AlwaysPreserve) 
    cPtr := M3DIBuilderRaw.DIBuilder_createAutoVariable2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = AlwaysPreserve ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILocalVariable, cPtr, false);


   DILocalVariable createAutoVariable(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createAutoVariable3(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILocalVariable, cPtr, false);


   DILabel createLabel(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo, BOOLEAN AlwaysPreserve) 
    cPtr := M3DIBuilderRaw.DIBuilder_createLabel0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = AlwaysPreserve ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILabel, cPtr, false);


   DILabel createLabel(DIScope Scope, StringRef Name, DIFile File, CARDINAL LineNo) 
    cPtr := M3DIBuilderRaw.DIBuilder_createLabel1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILabel, cPtr, false);


   DILocalVariable createParameterVariable(DIScope Scope, StringRef Name, CARDINAL ArgNo, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN AlwaysPreserve, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createParameterVariable0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = (unsigned int)ArgNo; ,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = AlwaysPreserve ? true : false; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILocalVariable, cPtr, false);


   DILocalVariable createParameterVariable(DIScope Scope, StringRef Name, CARDINAL ArgNo, DIFile File, CARDINAL LineNo, DIType Ty, BOOLEAN AlwaysPreserve) 
    cPtr := M3DIBuilderRaw.DIBuilder_createParameterVariable1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = (unsigned int)ArgNo; ,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; ,   = AlwaysPreserve ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILocalVariable, cPtr, false);


   DILocalVariable createParameterVariable(DIScope Scope, StringRef Name, CARDINAL ArgNo, DIFile File, CARDINAL LineNo, DIType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createParameterVariable2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = (unsigned int)ArgNo; ,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DIType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILocalVariable, cPtr, false);


   DIExpression createExpression(ArrayRef< uint64_t > Addr) 
    cPtr := M3DIBuilderRaw.DIBuilder_createExpression0(swigCPtr,  = ArrayRef< uint64_t >(Addr->Data,Addr->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIExpression, cPtr, false);


   DIExpression createExpression() 
    cPtr := M3DIBuilderRaw.DIBuilder_createExpression1(swigCPtr);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIExpression, cPtr, false);


   DIExpression createExpression(ArrayRef< int64_t > Addr) 
    cPtr := M3DIBuilderRaw.DIBuilder_createExpression2(swigCPtr,  = ArrayRef< int64_t >(Addr->Data,Addr->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIExpression, cPtr, false);


   DIExpression createConstantValueExpression(uint64_t Val) 
    cPtr := M3DIBuilderRaw.DIBuilder_createConstantValueExpression(swigCPtr,   = (uint64_t)Val; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIExpression, cPtr, false);


   DISubprogram createFunction(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags, DITemplateParameterArray TParams, DISubprogram Decl, DITypeArray ThrownTypes) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFunction0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;,  = SPFlags;,  = TParams;,   = *(DISubprogram **)&Decl; ,  = ThrownTypes;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createFunction(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags, DITemplateParameterArray TParams, DISubprogram Decl) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFunction1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;,  = SPFlags;,  = TParams;,   = *(DISubprogram **)&Decl; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createFunction(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags, DITemplateParameterArray TParams) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFunction2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;,  = SPFlags;,  = TParams;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createFunction(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFunction3(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;,  = SPFlags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createFunction(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFunction4(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createFunction(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine) 
    cPtr := M3DIBuilderRaw.DIBuilder_createFunction5(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createTempFunctionFwdDecl(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags, DITemplateParameterArray TParams, DISubprogram Decl, DITypeArray ThrownTypes) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempFunctionFwdDecl0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;,  = SPFlags;,  = TParams;,   = *(DISubprogram **)&Decl; ,  = ThrownTypes;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createTempFunctionFwdDecl(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags, DITemplateParameterArray TParams, DISubprogram Decl) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempFunctionFwdDecl1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;,  = SPFlags;,  = TParams;,   = *(DISubprogram **)&Decl; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createTempFunctionFwdDecl(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags, DITemplateParameterArray TParams) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempFunctionFwdDecl2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;,  = SPFlags;,  = TParams;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createTempFunctionFwdDecl(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempFunctionFwdDecl3(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;,  = SPFlags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createTempFunctionFwdDecl(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempFunctionFwdDecl4(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createTempFunctionFwdDecl(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL ScopeLine) 
    cPtr := M3DIBuilderRaw.DIBuilder_createTempFunctionFwdDecl5(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)ScopeLine; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createMethod(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL VTableIndex, INTEGER ThisAdjustment, DIType VTableHolder, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags, DITemplateParameterArray TParams, DITypeArray ThrownTypes) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMethod0(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)VTableIndex; ,   = (int)ThisAdjustment; ,   = *(DIType **)&VTableHolder; ,  = Flags;,  = SPFlags;,  = TParams;,  = ThrownTypes;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createMethod(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL VTableIndex, INTEGER ThisAdjustment, DIType VTableHolder, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags, DITemplateParameterArray TParams) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMethod1(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)VTableIndex; ,   = (int)ThisAdjustment; ,   = *(DIType **)&VTableHolder; ,  = Flags;,  = SPFlags;,  = TParams;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createMethod(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL VTableIndex, INTEGER ThisAdjustment, DIType VTableHolder, DINode::DIFlags Flags, DISubprogram::DISPFlags SPFlags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMethod2(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)VTableIndex; ,   = (int)ThisAdjustment; ,   = *(DIType **)&VTableHolder; ,  = Flags;,  = SPFlags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createMethod(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL VTableIndex, INTEGER ThisAdjustment, DIType VTableHolder, DINode::DIFlags Flags) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMethod3(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)VTableIndex; ,   = (int)ThisAdjustment; ,   = *(DIType **)&VTableHolder; ,  = Flags;);
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createMethod(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL VTableIndex, INTEGER ThisAdjustment, DIType VTableHolder) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMethod4(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)VTableIndex; ,   = (int)ThisAdjustment; ,   = *(DIType **)&VTableHolder; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createMethod(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL VTableIndex, INTEGER ThisAdjustment) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMethod5(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)VTableIndex; ,   = (int)ThisAdjustment; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createMethod(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty, CARDINAL VTableIndex) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMethod6(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; ,   = (unsigned int)VTableIndex; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DISubprogram createMethod(DIScope Scope, StringRef Name, StringRef LinkageName, DIFile File, CARDINAL LineNo, DISubroutineType Ty) 
    cPtr := M3DIBuilderRaw.DIBuilder_createMethod7(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(LinkageName->Data,LinkageName->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; ,   = *(DISubroutineType **)&Ty; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DISubprogram, cPtr, false);


   DICommonBlock createCommonBlock(DIScope Scope, DIGlobalVariable decl, StringRef Name, DIFile File, CARDINAL LineNo) 
    cPtr := M3DIBuilderRaw.DIBuilder_createCommonBlock(swigCPtr,   = *(DIScope **)&Scope; ,   = *(DIGlobalVariable **)&decl; ,  = StringRef(Name->Data,Name->Length);,   = *(DIFile **)&File; ,   = (unsigned int)LineNo; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DICommonBlock, cPtr, false);


   DINamespace createNameSpace(DIScope Scope, StringRef Name, BOOLEAN ExportSymbols) 
    cPtr := M3DIBuilderRaw.DIBuilder_createNameSpace(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,   = ExportSymbols ? true : false; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DINamespace, cPtr, false);


   DIModule createModule(DIScope Scope, StringRef Name, StringRef ConfigurationMacros, StringRef IncludePath, StringRef SysRoot) 
    cPtr := M3DIBuilderRaw.DIBuilder_createModule(swigCPtr,   = *(DIScope **)&Scope; ,  = StringRef(Name->Data,Name->Length);,  = StringRef(ConfigurationMacros->Data,ConfigurationMacros->Length);,  = StringRef(IncludePath->Data,IncludePath->Length);,  = StringRef(SysRoot->Data,SysRoot->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIModule, cPtr, false);


   DILexicalBlockFile createLexicalBlockFile(DIScope Scope, DIFile File, CARDINAL Discriminator) 
    cPtr := M3DIBuilderRaw.DIBuilder_createLexicalBlockFile0(swigCPtr,   = *(DIScope **)&Scope; ,   = *(DIFile **)&File; ,   = (unsigned int)Discriminator; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILexicalBlockFile, cPtr, false);


   DILexicalBlockFile createLexicalBlockFile(DIScope Scope, DIFile File) 
    cPtr := M3DIBuilderRaw.DIBuilder_createLexicalBlockFile1(swigCPtr,   = *(DIScope **)&Scope; ,   = *(DIFile **)&File; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILexicalBlockFile, cPtr, false);


   DILexicalBlock createLexicalBlock(DIScope Scope, DIFile File, CARDINAL Line, CARDINAL Col) 
    cPtr := M3DIBuilderRaw.DIBuilder_createLexicalBlock(swigCPtr,   = *(DIScope **)&Scope; ,   = *(DIFile **)&File; ,   = (unsigned int)Line; ,   = (unsigned int)Col; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DILexicalBlock, cPtr, false);


   DIImportedEntity createImportedModule(DIScope Context, DINamespace NS, DIFile File, CARDINAL Line) 
    cPtr := M3DIBuilderRaw.DIBuilder_createImportedModule0(swigCPtr,   = *(DIScope **)&Context; ,   = *(DINamespace **)&NS; ,   = *(DIFile **)&File; ,   = (unsigned int)Line; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIImportedEntity, cPtr, false);


   DIImportedEntity createImportedModule(DIScope Context, DIImportedEntity NS, DIFile File, CARDINAL Line) 
    cPtr := M3DIBuilderRaw.DIBuilder_createImportedModule1(swigCPtr,   = *(DIScope **)&Context; ,   = *(DIImportedEntity **)&NS; ,   = *(DIFile **)&File; ,   = (unsigned int)Line; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIImportedEntity, cPtr, false);


   DIImportedEntity createImportedModule(DIScope Context, DIModule M, DIFile File, CARDINAL Line) 
    cPtr := M3DIBuilderRaw.DIBuilder_createImportedModule2(swigCPtr,   = *(DIScope **)&Context; ,   = *(DIModule **)&M; ,   = *(DIFile **)&File; ,   = (unsigned int)Line; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIImportedEntity, cPtr, false);


   DIImportedEntity createImportedDeclaration(DIScope Context, DINode Decl, DIFile File, CARDINAL Line, StringRef Name) 
    cPtr := M3DIBuilderRaw.DIBuilder_createImportedDeclaration0(swigCPtr,   = *(DIScope **)&Context; ,   = *(DINode **)&Decl; ,   = *(DIFile **)&File; ,   = (unsigned int)Line; ,  = StringRef(Name->Data,Name->Length););
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIImportedEntity, cPtr, false);


   DIImportedEntity createImportedDeclaration(DIScope Context, DINode Decl, DIFile File, CARDINAL Line) 
    cPtr := M3DIBuilderRaw.DIBuilder_createImportedDeclaration1(swigCPtr,   = *(DIScope **)&Context; ,   = *(DINode **)&Decl; ,   = *(DIFile **)&File; ,   = (unsigned int)Line; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(DIImportedEntity, cPtr, false);


   llvm::Instruction insertDeclareAtEnd(llvm::Value Storage, DILocalVariable VarInfo, DIExpression Expr, DILocation DL, llvm::BasicBlock InsertAtEnd) 
    cPtr := M3DIBuilderRaw.DIBuilder_insertDeclareAtEnd(swigCPtr,   = *(llvm::Value **)&Storage; ,   = *(DILocalVariable **)&VarInfo; ,   = *(DIExpression **)&Expr; ,   = *(DILocation **)&DL; ,   = *(llvm::BasicBlock **)&InsertAtEnd; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(llvm::Instruction, cPtr, false);


   llvm::Instruction insertDeclareBefore(llvm::Value Storage, DILocalVariable VarInfo, DIExpression Expr, DILocation DL, llvm::Instruction InsertBefore) 
    cPtr := M3DIBuilderRaw.DIBuilder_insertDeclareBefore(swigCPtr,   = *(llvm::Value **)&Storage; ,   = *(DILocalVariable **)&VarInfo; ,   = *(DIExpression **)&Expr; ,   = *(DILocation **)&DL; ,   = *(llvm::Instruction **)&InsertBefore; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(llvm::Instruction, cPtr, false);


   llvm::Instruction insertLabelBefore(DILabel LabelInfo, DILocation DL, llvm::Instruction InsertBefore) 
    cPtr := M3DIBuilderRaw.DIBuilder_insertLabelBefore(swigCPtr,   = *(DILabel **)&LabelInfo; ,   = *(DILocation **)&DL; ,   = *(llvm::Instruction **)&InsertBefore; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(llvm::Instruction, cPtr, false);


   llvm::Instruction insertLabelAtEnd(DILabel LabelInfo, DILocation DL, llvm::BasicBlock InsertAtEnd) 
    cPtr := M3DIBuilderRaw.DIBuilder_insertLabelAtEnd(swigCPtr,   = *(DILabel **)&LabelInfo; ,   = *(DILocation **)&DL; ,   = *(llvm::BasicBlock **)&InsertAtEnd; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(llvm::Instruction, cPtr, false);


   llvm::Instruction insertDbgValueAtEnd(llvm::Value Val, DILocalVariable VarInfo, DIExpression Expr, DILocation DL, llvm::BasicBlock InsertAtEnd) 
    cPtr := M3DIBuilderRaw.DIBuilder_insertDbgValueAtEnd(swigCPtr,   = *(llvm::Value **)&Val; ,   = *(DILocalVariable **)&VarInfo; ,   = *(DIExpression **)&Expr; ,   = *(DILocation **)&DL; ,   = *(llvm::BasicBlock **)&InsertAtEnd; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(llvm::Instruction, cPtr, false);


   llvm::Instruction insertDbgValueBefore(llvm::Value Val, DILocalVariable VarInfo, DIExpression Expr, DILocation DL, llvm::Instruction InsertBefore) 
    cPtr := M3DIBuilderRaw.DIBuilder_insertDbgValueBefore(swigCPtr,   = *(llvm::Value **)&Val; ,   = *(DILocalVariable **)&VarInfo; ,   = *(DIExpression **)&Expr; ,   = *(DILocation **)&DL; ,   = *(llvm::Instruction **)&InsertBefore; );
    RETURN (cPtr = IntPtr.Zero) ? null : NEW(llvm::Instruction, cPtr, false);


    replaceVTableHolder(DICompositeType T, DIType VTableHolder) M3DIBuilderRaw.DIBuilder_replaceVTableHolder(swigCPtr,  = T;,   = *(DIType **)&VTableHolder; )

    replaceArrays(DICompositeType T, DINodeArray Elements, DINodeArray TParams) M3DIBuilderRaw.DIBuilder_replaceArrays0(swigCPtr,  = T;,  argp = *(DINodeArray **)&Elements;
    = *argp; ,  argp = *(DINodeArray **)&TParams;
    = *argp; )

    replaceArrays(DICompositeType T, DINodeArray Elements) M3DIBuilderRaw.DIBuilder_replaceArrays1(swigCPtr,  = T;,  argp = *(DINodeArray **)&Elements;
    = *argp; )

}
