
% File: m3-sys/llvm22bindings/src/m3makefile

% Copyright 2015, Rodney M. Bates.
% rodney.m.bates@acm.org
% Licensed under the Gnu Public License, version 2 or later.

% This package contains Modula-3 bindings to the llvm infrastructure,
% You should have installed the llvm libraries in the appropriate place
% for this version of the bindings ie llvm version 22 

import ("m3core")

Interface ("LLVMTypes") 
Interface ("DwarfConst") 
Module    ("LLVMRaw") 
Module    ("LLVM") 
Module    ("M3DebugInfoRaw") 
Module    ("M3DebugInfo") 

% The version of this binding. Should agree with users installed version.
VER = "22"

% set this to TRUE if you want to build m3llvm standalone in llvm21 dir
STATIC = FALSE

if equal (OS_TYPE, "POSIX")

  % Only for linux. Other implementations would need to check and
  % possibly modify these library paths.
  if STATIC
  % Set the location of the static posix libraries that llvm depends on.
  % You will need these if you try to build the main program standalone
  % These can change with package upgrades.
    LIB_DIR1 = "/usr/lib/gcc/x86_64-linux-gnu/14"
    LIB_DIR2 = "/usr/lib/x86_64-linux-gnu"
  else
  % Lib location for dynamic posix libraries. Again this is for linux so
  % other architectures will need to check their paths.
    LIB_DIR1 = "/lib"
    LIB_DIR2 = "/lib"
  end

  % llvm needs the stdc++ lib and the compression lib z.
  import_lib("stdc++",LIB_DIR1)
  import_lib("z",LIB_DIR2)

%  these should not be needed
%  import_lib("dl",LIB_DIR1)
%  import_lib("curses",LIB_DIR1)
%  import_lib("termcap",LIB_DIR1)

else

% Windows
  % set the location of windows system libraries that llvm depends on
  LIB_DIR = ""

  import_lib("shell32"      ,LIB_DIR)
  import_lib("ole32"        ,LIB_DIR)
  import_lib("msvcprt"      ,LIB_DIR)
  import_lib("oldnames"     ,LIB_DIR)
 
% may need these in future
%  import_lib("psapi"        ,LIB_DIR)
%  import_lib("oleaut32"     ,LIB_DIR)
%  import_lib("uuid"         ,LIB_DIR)  
%  import_lib("libvcruntime" ,LIB_DIR)
%  import_lib("libcmt"       ,LIB_DIR)  
end

/* 
  Import the LLVM libraries using llvm-config.
  LLVM library order is important and hard to get correct with
  such a large number of libs and new libraries added with
  each new version. Using llvm-config --libnames takes the guesswork out.
  We get the list of libraries in the order they are needed in the link.
  Then reverse the order.
*/

proc llvmlibs() is

      % get the location of the llvm libraries
      local llvm_libdir = q_exec_get ("llvm-config --libdir")
      local libdir= skipr(llvm_libdir[1])

      % get the full list of lib names of which we only use a small number
      local libnames = q_exec_get ("llvm-config --libnames")
      local lib_arr = split(skipr(libnames[1])," ")

      local lib_tab = {}
      local key = "x"
      foreach lib in lib_arr
          lib_tab{key} = lib
          key = key & "x"
      end

      %reverse extraction
      local lib = ""
      foreach name in lib_arr
        %lets hope there are no more than 500 libs
        key = sub(key,1,500)
        lib = lib_tab{key}
        if equal (OS_TYPE, "POSIX")
          lib = sub(lib,3,len(lib)) %remove lib prefix
	end
        if equal(OS, "Windows_NT")	
          lib = subst(lib,".lib","",1) %remove suffix
	else
          lib = subst(lib,".a","",1) %remove suffix
          lib = subst(lib,".so","",1) %or remove suffix
	end
        %write("key: " & key & " val " & lib & "\n")
        import_lib(lib,libdir)
      end
end

%Find out which version of LLVM we have installed.
proc llvmver() is
      local llvm_version = q_exec_get ("llvm-config --version")
      local ver_arr = split(skipr(llvm_version[1]),".")
      local ver = ver_arr[0]
      if not equal(ver, VER)
        write("Warning: Installed version of llvm (" & ver & ") not equal to this binding(" & VER & ")\n")
      end
end

llvmver()
llvmlibs()

Library ("llvm22bindings")

