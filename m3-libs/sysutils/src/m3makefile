% Copyright 1999-2002 elego Software Solutions GmbH, Berlin, Germany.
% All rights reserved.
%
% Redistribution and use in source and binary forms, with or without
% modification, are permitted provided that the following conditions
% are met:
% 1. Redistributions of source code must retain the above copyright
%    notice, this list of conditions and the following disclaimer.
% 2. Redistributions in binary form must reproduce the above copyright
%    notice, this list of conditions and the following disclaimer in the
%    documentation and/or other materials provided with the distribution.
%
% THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
% IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
% OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
% IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
% INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
% NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
% DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
% THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
% (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
% THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

%include(path() & "/../../quake/cvsup.quake")
% Determine which compiler variant we have.
if defined("CM3_VERSION")
  M3_VARIANT = "CM3"
else
  if not defined("build_standalone")
    M3_VARIANT = "PM3"
  else
    M3_VARIANT = "SRC"
  end
end

%no_shared_lib()

%m3_option("-commands")
import("libm3")
%if defined("CM3_VERSION")
%  import("http")
%end

module("EnvUtils")
module("FingerprintFmt")
module("FSUtils")
module("SMsg")
module("MsgIF")
module("MsgX")
module("ProcessEnv")
module("System")
interface("PathRepr")
implementation("PathReprCommon")
interface("TextUtils")
module("TextReadingUtils")
interface("OSSpecials")
%if not defined("CM3_VERSION")
  module("FastLex")
%end
Module("Confirmation")
Module("DirStack")
Module("ConnectRdWr")
Table("TextTextSeq", "Text", "TextSeq")

export_interface("EnvUtils")
export_interface("FSUtils")
export_interface("SMsg")
export_interface("MsgIF")
export_interface("MsgX")
export_interface("ProcessEnv")
export_interface("System")
export_interface("PathRepr")
export_interface("TextUtils")
export_interface("TextReadingUtils")
export_interface("OSSpecials")
%if not defined("CM3_VERSION")
  export_interface("FastLex")
%end

if equal (OS_TYPE, "WIN32")
  include_dir("WIN32")
  include_dir("POSIX")
else
  include_dir("POSIX")
end

readonly CompDepPieces = {
  "CM3"     : [ "cm3" ],
  "default" : [ "pm3" ]
}

proc doPieces(tbl, key) is
  local pieces = tbl{"default"}
  if tbl contains key
    pieces = tbl{key}
  end
  foreach d in pieces
    include_dir(d)
  end
end

doPieces(CompDepPieces, M3_VARIANT)

Library("sysutils")
